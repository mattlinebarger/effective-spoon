{
  "swagger": "2.0",
  "info": {
    "version": "2016-08-04T18:30:18Z",
    "title": "Catalytic Internal API Documentation",
    "description": "# Improving Our Docs\nIf you see a section of these docs that needs improvement, please [submit a request here](https://catalytic.pushbot.com/start/8bf3db91-a8b2-4e34-aade-38c08a49170e).\nOr better yet, make a change yourself in [the main swagger file](https://github.com/catalyticlabs/pushbot-api/blob/master/api-swagger/api-swagger.yaml) or\none of the [schema files](https://github.com/catalyticlabs/pushbot-api/tree/master/api-swagger/schema) and submit a pull request.\n# Introduction\n## What is Catalytic?\nCatalytic is a process automation and orchestration application. Catalytic can solve recurring business problems by bringing together a group of people and multiple isolated applications. Processes can be started manually, scheduled or triggered by an event.\n## What can you do with the Catalytic API?\nThe Catalytic API allows you to define and manage your processes throughout their lifecycle.\n\nWith the Catalytic API, you can:\n- Define your processes\n- Start and monitor a process\n- Complete or reassign tasks\n- Query and update data tables\n- Create machine learning models\n- Manage the users and groups in your team\n- Configure integrations with other applications\n## Who is this document for?\nThe Catalytic API is aimed at developers and engineers who are familiar with using RESTful APIs to develop custom integrations.\n\nIf you want to integrate with Catalytic but this is a little too technical, visit our [integrations page](https://catalytic.com/solutions/) to see if an integration you need already exists. If you can’t find the integration you’re looking for, contact our [integration experts](mailto:help@catalytic.com) and we’ll be happy to help you out.\n## Where to next?\n- [Getting Started](/#section/Introduction/Getting-Started) - Start by creating a team and process template. Then run your process and complete a task.\n- [Authentication](/#section/Authentication) - Retrieve the authentication credentials required for each HTTP request to Catalytic\n- API reference - Use the sidebar to search or jump straight to a specific request definition\n## Conventions\nThroughout the Pushbot API, within the body of a `PUT` or `POST`, optional fields can always\nbe omitted, rather than explicitly set to `\"\"` or `null`. Similarly empty arrays can be ommitted\nexcept where noted.\n\nThe API is versioned at the root of the path. Only breaking changes will\ncause a new major version to be released. The current version is `v1` and\nis available at [https://{teamname}.pushbot.com/v1](https://{teamname}.pushbot.com/v1d)\n## Getting Started\n'This will walk you through:'\n1. Creating a new team\n2. Inviting a user\n3. Creating a process with a few steps\n4. Starting a run of that process\n5. Completing the tasks in that process\n6. Viewing the completed run\n# Authentication\nMost API calls are authenticated using your User Key. You can retrieve your User Key with your username and password by issuing a `POST` to `/teams/{teamname}/auth` with a json body containing your `username` and `password`. You may optionally use your email address as your username. For example:\n\n```\nPOST /v1/teams/my-team/auth\n\n{\n  \"username\": \"alice\",\n  \"password\": \"super-secret\"\n}\n```\n\nOr\n\n```\nPOST /v1/teams/my-team/auth\n\n{\n  \"username\": \"alice@example.com\",\n  \"password\": \"super-secret\"\n}\n```\nThe JSON response will include your `userKey` which you should include in all subsequent calls as an `x-user-key` header.\n\nIf you have to work with OpenID or ActiveDirectory please contact us at ….\n",
    "contact": {
      "url": "https://catalytic.com"
    }
  },
  "host": "api.pushbot.io",
  "basePath": "/staging",
  "tags": [
    {
      "name": "Actions",
      "description": "The Action Registration API is used to register new actions in a team or to view,\nupdate or delete those actions.\n"
    },
    {
      "name": "Action Workers",
      "description": "The Action Worker Registration API is used to register new workers that are ready\nto execute a specific set of actions within a team. It can also be used to view\nor delete those workers.\n"
    },
    {
      "name": "Action Worker Control",
      "description": "The Worker Control API allows global administrators (`admin` Team members) to\ntemporary block action execution for targeted workers, actions, tags, etc.\n"
    },
    {
      "name": "Action Worker Execution",
      "description": "The Worker Execution API allows registered Action Worker instances to acquire waiting\ntasks to execute and to complete those tasks.\n"
    },
    {
      "name": "AccessRequests"
    },
    {
      "name": "AccessRequest"
    },
    {
      "name": "Admin"
    },
    {
      "name": "Apps"
    },
    {
      "name": "Appdata"
    },
    {
      "name": "Authentication"
    },
    {
      "name": "AWS"
    },
    {
      "name": "Commands"
    },
    {
      "name": "User Tokens",
      "description": "The User Token API allows users to manage User Tokens, which are used for authentication by the SDK.\nSupported functionality includes creation, approval, activation, revocation, verification and listing.\n"
    },
    {
      "name": "Emails"
    },
    {
      "name": "Env"
    },
    {
      "name": "Favorites"
    },
    {
      "name": "Features"
    },
    {
      "name": "Fields"
    },
    {
      "name": "Files"
    },
    {
      "name": "Groups"
    },
    {
      "name": "Integrations"
    },
    {
      "name": "Messages"
    },
    {
      "name": "ML"
    },
    {
      "name": "Invites"
    },
    {
      "name": "Notifications"
    },
    {
      "name": "Outlook"
    },
    {
      "name": "Predictor"
    },
    {
      "name": "Predictors"
    },
    {
      "name": "Processes"
    },
    {
      "name": "ProcessExports"
    },
    {
      "name": "ProcessImports"
    },
    {
      "name": "Reports"
    },
    {
      "name": "Runs"
    },
    {
      "name": "SAML"
    },
    {
      "name": "Search",
      "description": "Search across entities within a team"
    },
    {
      "name": "SMS"
    },
    {
      "name": "Steps"
    },
    {
      "name": "Tables"
    },
    {
      "name": "Tasks"
    },
    {
      "name": "Teams"
    },
    {
      "name": "Test"
    },
    {
      "name": "Triggers"
    },
    {
      "name": "Upcoming"
    },
    {
      "name": "Users",
      "description": "Place context around Users and Invites here with links to related sections\n## Invites\nBefore creating a user, invite them to your Catalytic team.\n## Users\nAfter an invitee has accepted their invite, their invite record is converted into a user.\n"
    },
    {
      "name": "Webhooks"
    }
  ],
  "x-tagGroups": [
    {
      "name": "Processes",
      "tags": [
        "Processes",
        "Runs",
        "Tasks",
        "Steps",
        "Fields",
        "Files"
      ]
    },
    {
      "name": "Users",
      "tags": [
        "Users",
        "Invites",
        "Teams",
        "Authentication",
        "Groups",
        "Phones"
      ]
    },
    {
      "name": "Private",
      "tags": [
        "Favorites",
        "Messages",
        "ML",
        "Reports",
        "Test",
        "SAML",
        "Search",
        "Tables",
        "Webhooks",
        "Apps",
        "Commands",
        "Emails",
        "Env",
        "Notifications",
        "Outlook",
        "ProcessExports",
        "ProcessImports",
        "SMS",
        "Triggers",
        "Upcoming",
        "Appdata",
        "AWS",
        "Apps"
      ]
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/apps": {
      "get": {
        "summary": "List apps",
        "description": "Retrieve a list of apps",
        "tags": [
          "Apps"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "action",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Apps"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "examples": {}
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "listSharedApps",
        "x-amazon-apigateway-integration": {
          "requestTemplates": {
            "application/json": "{\n    \"function\" : \"listSharedApps\",\n    \"stage\" : \"$stageVariables.env\",\n    \"apiKey\": \"$context.identity.apiKey\",\n    \"teamName\": \"admin\",\n    \"action\": \"$input.params('action')\"\n}"
          },
          "type": "aws"
        },
        "operationId": "list-apps"
      }
    },
    "/apps/{appname}": {
      "get": {
        "tags": [
          "Apps"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Apps"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "listSharedApps",
        "x-amazon-apigateway-integration": {
          "requestTemplates": {
            "application/json": "{\n    \"function\" : \"listSharedApps\",\n    \"stage\" : \"$stageVariables.env\",\n    \"apiKey\": \"$context.identity.apiKey\",\n    \"teamName\": \"admin\",\n    \"appName\": \"$input.params('appname')\"\n}"
          },
          "type": "aws"
        },
        "operationId": "get-app",
        "summary": "Get app",
        "description": "Get an app by name"
      },
      "parameters": [
        {
          "type": "string",
          "name": "appname",
          "in": "path",
          "required": true
        }
      ]
    },
    "/apps/{appname}/{action}": {
      "get": {
        "tags": [
          "Apps"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Apps"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "listSharedApps",
        "x-amazon-apigateway-integration": {
          "requestTemplates": {
            "application/json": "{\n    \"function\" : \"listSharedApps\",\n    \"stage\" : \"$stageVariables.env\",\n    \"apiKey\": \"$context.identity.apiKey\",\n    \"teamName\": \"admin\",\n    \"appName\": \"$input.params('appname')\",\n    \"action\": \"$input.params('action')\"\n}"
          },
          "type": "aws"
        },
        "operationId": "get-app-action",
        "summary": "Get app action",
        "description": "Get app action",
        "parameters": [
          {
            "name": "action",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "appname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/apps/{appname}/{action}/{appversion}": {
      "get": {
        "tags": [
          "Apps"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appversion",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "action",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "appname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Apps"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "getSharedApp",
        "x-amazon-apigateway-integration": {
          "requestTemplates": {
            "application/json": "{\n    \"function\" : \"getSharedApp\",\n    \"stage\" : \"$stageVariables.env\",\n    \"apiKey\": \"$context.identity.apiKey\",\n    \"teamName\": \"admin\",\n    \"appName\": \"$input.params('appname')\",\n    \"action\": \"$input.params('action')\",\n    \"version\": \"$input.params('appversion')\"\n}"
          },
          "type": "aws"
        },
        "operationId": "get-app-action-version",
        "summary": "Get app action version",
        "description": "Get app action version"
      },
      "post": {
        "tags": [
          "Apps"
        ],
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appversion",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "appname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "action",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Apps"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "x-pushbot-function": "execApp",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Create app action version",
        "operationId": "create-app-action-version",
        "description": "Create app action version"
      }
    },
    "/hellosign/callback": {
      "post": {
        "consumes": [
          "text/xml",
          "application/json",
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Empty"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "x-pushbot-function": "helloSign",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "operationId": "hellosign-callback",
        "summary": "Hellosign callback",
        "description": "hellosign callback",
        "tags": []
      }
    },
    "/slack/commands": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "201 response",
            "schema": {
              "$ref": "#/definitions/Empty"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "x-pushbot-function": "slackCommandsApp",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "operationId": "slack-commands",
        "summary": "Slack commands",
        "description": "Slack commands",
        "tags": []
      }
    },
    "/slack/interactive": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "201 response",
            "schema": {
              "$ref": "#/definitions/Empty"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "x-pushbot-function": "slackInteractive",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "operationId": "slack-interactive",
        "summary": "Slack interactive",
        "description": "Slack interactive",
        "tags": []
      }
    },
    "/await/{transactionid}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "transactionid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Empty"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "awaitResult",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "operationId": "await-transaction",
        "summary": "Await a transaction",
        "description": "Await a transaction to complete.\n\nCertain operations that use a queue mechanism produce a transaction in the response. To know when that transaction has completed you can use this endpoint which will return once the transaction has completed.",
        "tags": []
      }
    },
    "/env": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Env"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "examples": {
              "Local example": {
                "stage": "test",
                "apiVersion": "1.5.3034"
              }
            }
          }
        },
        "x-pushbot-function": "getEnv",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "operationId": "get-env",
        "summary": "Get environment",
        "description": "Get info about the current environment",
        "tags": []
      }
    },
    "/community-sso": {
      "post": {
        "summary": "Community SSO",
        "operationId": "community-sso",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Community-SSO"
            }
          }
        },
        "parameters": [
          {
            "type": "string",
            "in": "query",
            "name": "client_id",
            "required": true
          },
          {
            "type": "string",
            "in": "query",
            "name": "timestamp",
            "required": true
          },
          {
            "type": "string",
            "in": "query",
            "required": true,
            "name": "signature"
          }
        ],
        "description": "Community SSO",
        "tags": []
      }
    },
    "/sms/inbound": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SMS"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "x-pushbot-function": "createInboundSms",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "operationId": "sms-inbound",
        "summary": "Create inbound sms",
        "description": "Create inbound sms",
        "tags": []
      }
    },
    "/aws/on-ses": {
      "post": {
        "summary": "Receive SES email",
        "tags": [
          "AWS"
        ],
        "consumes": [
          "application/json",
          "text/plain"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Empty"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "x-pushbot-function": "receiveSesEmail",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "operationId": "on-ses",
        "description": "Receive SES email"
      }
    },
    "/aws/on-ses-sns": {
      "post": {
        "summary": "SES SNS notification handler",
        "tags": [
          "AWS"
        ],
        "consumes": [
          "application/json",
          "text/plain"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Empty"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "x-pushbot-function": "onSesSnsNotification",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "operationId": "on-ses-sns",
        "description": "SES SNS notification handler"
      }
    },
    "/aws/sns/on-help-updated": {
      "post": {
        "x-visible": false,
        "summary": "SNS Notification of new help doc data to re-index",
        "tags": [
          "AWS"
        ],
        "consumes": [
          "application/json",
          "text/plain"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Empty"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "operationId": "sns-on-helpu-updated",
        "description": "SNS Notification of new help doc data to re-index"
      }
    },
    "/aws/ses/bounce": {
      "post": {
        "summary": "SES bounce notification handler",
        "tags": [
          "AWS"
        ],
        "consumes": [
          "application/json",
          "text/plain"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Empty"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "x-pushbot-function": "onSesBounce",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "operationId": "ses-bounce",
        "description": "SES bounce notification handler"
      }
    },
    "/aws/ses/open": {
      "post": {
        "summary": "SES open notification handler",
        "tags": [
          "AWS"
        ],
        "consumes": [
          "application/json",
          "text/plain"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Empty"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "x-pushbot-function": "onSesOpen",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "operationId": "ses-open",
        "description": "SES open notification handler"
      }
    },
    "/features": {
      "get": {
        "tags": [
          "Features"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Features"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "summary": "Get features",
        "operationId": "get-features",
        "description": "Get all the features available and their status",
        "security": [
          {
            "user_key": []
          }
        ]
      }
    },
    "/help/reindex": {
      "post": {
        "summary": "Re-index help content for search",
        "tags": [
          "Admin"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Fields"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "operationId": "reindex-help",
        "description": "Re-index help content for search"
      }
    },
    "/processes": {
      "post": {
        "summary": "Create a process in another team (admin only)",
        "tags": [
          "Admin"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "process",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Processes"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Processes"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "adminCreateProcess",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "operationId": "create-process-in-another-team",
        "description": "Create a process in another team (admin only)"
      }
    },
    "/processes/{processid}": {
      "get": {
        "summary": "Get process",
        "tags": [
          "Processes"
        ],
        "x-visible": true,
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "processid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "export",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Processes"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "getSharedProcess",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "description": "Get a publicly shared process",
        "operationId": "get-process"
      }
    },
    "/teams": {
      "post": {
        "summary": "Create team",
        "tags": [
          "Teams"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "team",
            "in": "body",
            "description": "Team to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Teams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Teams"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "createTeam",
        "x-amazon-apigateway-integration": {
          "requestTemplates": {
            "application/json": "{\n    \"function\": \"createTeam\",\n    \"stage\" : \"$stageVariables.env\",\n    \"apiKey\": \"$context.identity.apiKey\",\n    \"body\" : $input.json('$')\n}"
          },
          "type": "aws"
        },
        "operationId": "create-team",
        "description": "Create a new team"
      }
    },
    "/teams/{teamname}": {
      "get": {
        "summary": "Get team",
        "tags": [
          "Teams"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Teams"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "getTeam",
        "x-amazon-apigateway-integration": {
          "requestTemplates": {
            "application/json": "{\n    \"function\": \"getTeam\",\n    \"stage\" : \"$stageVariables.env\",\n    \"apiKey\": \"$context.identity.apiKey\",\n    \"userKey\": \"$input.params('x-user-key')\",\n    \"teamName\": \"$input.params('teamname')\"\n}"
          },
          "type": "aws"
        },
        "operationId": "get-team-by-name",
        "description": "Get a specific team"
      },
      "put": {
        "summary": "Update team",
        "tags": [
          "Teams"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Teams"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "updateTeam",
        "x-amazon-apigateway-integration": {
          "requestTemplates": {
            "application/json": "{\n    \"function\": \"updateTeam\",\n    \"stage\" : \"$stageVariables.env\",\n    \"apiKey\": \"$context.identity.apiKey\",\n    \"userKey\": \"$input.params('x-user-key')\",\n    \"teamName\": \"$input.params('teamname')\",\n    \"body\" : $input.json('$')\n}"
          },
          "type": "aws"
        },
        "operationId": "update-team",
        "description": "Update a specific team"
      },
      "delete": {
        "summary": "Delete team",
        "tags": [
          "Teams"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Teams"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "deleteTeam",
        "x-amazon-apigateway-integration": {
          "requestTemplates": {
            "application/json": "{\n    \"function\": \"deleteTeam\",\n    \"stage\" : \"$stageVariables.env\",\n    \"apiKey\": \"$context.identity.apiKey\",\n    \"userKey\": \"$input.params('x-user-key')\",\n    \"teamName\": \"$input.params('teamname')\"\n}"
          },
          "type": "aws"
        },
        "operationId": "delete-team",
        "description": "Delete a specific team"
      }
    },
    "/teams/{teamname}/access-requests": {
      "post": {
        "summary": "Create access request",
        "tags": [
          "AccessRequest"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AccessRequest"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "operationId": "create-access-request",
        "description": "Create access request"
      }
    },
    "/teams/{teamname}/access-requests/{accessrequestid}": {
      "put": {
        "summary": "Approve access request",
        "tags": [
          "AccessRequest"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accessrequestid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AccessRequest"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "operationId": "approve-access-request",
        "description": "Approve a specific access request"
      }
    },
    "/teams/{teamname}/apps": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "action",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "includeSharedApps",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "integrationDefinition",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "customIntegrationWildcard",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Apps"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "x-pushbot-function": "listApps",
        "x-amazon-apigateway-integration": {
          "requestTemplates": {
            "application/json": "{\n    \"function\" : \"listApps\",\n    \"stage\" : \"$stageVariables.env\",\n    \"apiKey\": \"$context.identity.apiKey\",\n    \"userKey\": \"$input.params('x-user-key')\",\n    \"teamName\": \"$input.params('teamname')\",\n    \"action\": \"$input.params('action')\",\n    \"customIntegrationWildcard\": \"$input.params('customIntegrationWildcard')\"\n    #if($input.params('includeSharedApps') == \"true\"), \"includeSharedApps\": true #end\n    #if($input.params('integrationDefinition') == \"true\"), \"integrationDefinition\": true #end    #if($input.params('includeDrafts') == \"true\"), \"includeDrafts\": true #end\n}"
          },
          "type": "aws"
        },
        "operationId": "get-apps-by-team",
        "summary": "Get team apps",
        "description": "Get apps for a specific team",
        "tags": []
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Apps"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "x-pushbot-function": "createApp",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "operationId": "create-app",
        "summary": "Create team app",
        "description": "Create app for a specific team",
        "tags": []
      }
    },
    "/teams/{teamname}/apps/{appname}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "includeSharedApps",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Apps"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "x-pushbot-function": "listApps",
        "x-amazon-apigateway-integration": {
          "requestTemplates": {
            "application/json": "{\n    \"function\" : \"listApps\",\n    \"stage\" : \"$stageVariables.env\",\n    \"apiKey\": \"$context.identity.apiKey\",\n    \"userKey\": \"$input.params('x-user-key')\",\n    \"teamName\": \"$input.params('teamname')\",\n    \"appName\": \"$input.params('appname')\"\n    #if($input.params('includeSharedApps') == \"true\"), \"includeSharedApps\": true #end\n    #if($input.params('includeDrafts') == \"true\"), \"includeDrafts\": true #end\n}"
          },
          "type": "aws"
        },
        "operationId": "get-team-app",
        "summary": "Get app",
        "description": "Get a specific app for a specific team",
        "tags": []
      },
      "delete": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "importedCollection",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "204 response",
            "schema": {
              "$ref": "#/definitions/ImportAction"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "operationId": "delete-app-by-name",
        "summary": "Delete app records by app name",
        "description": "Deleting a group of apps that live in the database",
        "tags": []
      }
    },
    "/teams/{teamname}/apps/{appname}/{action}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "action",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "includeSharedApps",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Apps"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "x-pushbot-function": "listApps",
        "x-amazon-apigateway-integration": {
          "requestTemplates": {
            "application/json": "{\n    \"function\" : \"listApps\",\n    \"stage\" : \"$stageVariables.env\",\n    \"apiKey\": \"$context.identity.apiKey\",\n    \"userKey\": \"$input.params('x-user-key')\",\n    \"teamName\": \"$input.params('teamname')\",\n    \"appName\": \"$input.params('appname')\",\n    \"action\": \"$input.params('action')\"\n    #if($input.params('includeSharedApps') == \"true\"), \"includeSharedApps\": true #end\n    #if($input.params('includeDrafts') == \"true\"), \"includeDrafts\": true #end\n}"
          },
          "type": "aws"
        },
        "operationId": "get-team-app-action",
        "summary": "Get team app action",
        "description": "Get a specific app action for a specific team",
        "tags": []
      }
    },
    "/teams/{teamname}/apps/{appname}/{action}/{appversion}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appversion",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "appname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "action",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Apps"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "x-pushbot-function": "getApp",
        "x-amazon-apigateway-integration": {
          "requestTemplates": {
            "application/json": "{\n    \"function\" : \"getApp\",\n    \"stage\" : \"$stageVariables.env\",\n    \"apiKey\": \"$context.identity.apiKey\",\n    \"userKey\": \"$input.params('x-user-key')\",\n    \"teamName\": \"$input.params('teamname')\",\n    \"appTeamName\": \"$input.params('teamname')\",\n    \"appName\": \"$input.params('appname')\",\n    \"action\": \"$input.params('action')\",\n    \"appVersion\": \"$input.params('appversion')\"\n}"
          },
          "type": "aws"
        },
        "operationId": "get-action-version",
        "summary": "Get team app action version",
        "description": "Get a specific app action version for a specific team",
        "tags": []
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appversion",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "appname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "action",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Apps"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "updateApp",
        "x-amazon-apigateway-integration": {
          "requestTemplates": {
            "application/json": "{\n    \"function\": \"updateApp\",\n    \"stage\" : \"$stageVariables.env\",\n    \"apiKey\": \"$context.identity.apiKey\",\n    \"userKey\": \"$input.params('x-user-key')\",\n    \"teamName\": \"$input.params('teamname')\",\n    \"appName\": \"$input.params('appname')\",\n    \"action\": \"$input.params('action')\",\n    \"appVersion\": \"$input.params('appversion')\",\n    \"body\": $input.json('$')\n}"
          },
          "type": "aws"
        },
        "operationId": "update-app-action-version",
        "summary": "Update app action version",
        "description": "Update an app action version for a specific team",
        "tags": []
      },
      "post": {
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appversion",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "appname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "action",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Apps"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "x-pushbot-function": "execApp",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "operationId": "create-team-app-action-version",
        "summary": "Create app action version",
        "description": "Create a new app action version for a specific team",
        "tags": []
      }
    },
    "/teams/{teamname}/apps:import": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "importedActions",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ImportAction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ImportAction"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "operationId": "import-app",
        "summary": "Import app",
        "description": "Import an app for a specific team",
        "tags": []
      }
    },
    "/teams/{teamname}/custom-integration-definition": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "customIntegrationDefinition",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomIntegrationDefinition"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Apps"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "operationId": "create-custom-integration",
        "summary": "Create custom integration",
        "description": "Create custom integration for a specific team",
        "tags": []
      }
    },
    "/teams/{teamname}/custom-integration-definition/{appname}/{action}/{appversion}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "appname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "action",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "appversion",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Apps"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "examples": {}
          }
        },
        "operationId": "get-custom-integration",
        "summary": "Get custom integration",
        "description": "Get custom integration for a specific team",
        "tags": []
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "appname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "action",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "appversion",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "customIntegrationDefinition",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomIntegrationDefinition"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Apps"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "operationId": "update-custom-integration",
        "summary": "Update custom integration",
        "description": "Update a custom integration for a specific team",
        "tags": []
      },
      "delete": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "appname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "action",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "appversion",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "operationId": "delete-custom-integration",
        "summary": "Delete custom integration",
        "description": "Delete a custom integration for a specific team",
        "tags": []
      }
    },
    "/teams/{teamname}/actions": {
      "get": {
        "summary": "List all actions in a team",
        "description": "Lists all actions registered in a team. Supports paging and sorting.",
        "operationId": "list-actions",
        "x-visible": true,
        "tags": [
          "Actions"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "description": "A page of actions",
              "properties": {
                "nextPageToken": {
                  "type": "string",
                  "description": "the token to use to retrieve the next page of results"
                },
                "actions": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Action"
                  }
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ]
      },
      "post": {
        "summary": "Register a new action in a team",
        "description": "Registers a new action in a team",
        "operationId": "create-action",
        "x-visible": true,
        "tags": [
          "Actions"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "action",
            "in": "body",
            "description": "The action to register",
            "schema": {
              "$ref": "#/definitions/Action"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Action"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ]
      }
    },
    "/teams/{teamname}/actions/{actionID}": {
      "get": {
        "summary": "Get an action",
        "description": "Gets an action",
        "operationId": "get-action",
        "x-visible": true,
        "tags": [
          "Actions"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "actionID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Action"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ]
      },
      "patch": {
        "summary": "Update an action",
        "description": "Updates an action",
        "operationId": "update-action",
        "x-visible": true,
        "tags": [
          "Actions"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "actionID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "update",
            "in": "body",
            "description": "The updated action attributes",
            "schema": {
              "type": "object",
              "description": "Action Update",
              "properties": {
                "action": {
                  "$ref": "#/definitions/Action"
                },
                "mask": {
                  "$ref": "#/definitions/UpdateMask"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "schema": {
              "$ref": "#/definitions/Action"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ]
      },
      "delete": {
        "summary": "Delete an action",
        "description": "Deletes an action",
        "operationId": "delete-action",
        "x-visible": true,
        "tags": [
          "Actions"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "actionID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted",
            "schema": {
              "$ref": "#/definitions/Empty"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ]
      }
    },
    "/teams/{teamname}/action-workers": {
      "get": {
        "summary": "List workers",
        "description": "Lists all action workers registered in a team. Supports paging and sorting.",
        "operationId": "list-team-workers",
        "x-visible": true,
        "tags": [
          "Action Workers"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "description": "A page of workers",
              "properties": {
                "nextPageToken": {
                  "type": "string",
                  "description": "the token to use to retrieve the next page of results"
                },
                "workers": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Worker"
                  }
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ]
      },
      "post": {
        "summary": "Register worker",
        "description": "Registers a new action worker instance in a team",
        "operationId": "create-worker",
        "x-visible": true,
        "tags": [
          "Action Workers"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "worker",
            "in": "body",
            "description": "The worker to register",
            "schema": {
              "$ref": "#/definitions/Worker"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Worker"
                },
                {
                  "type": "object",
                  "properties": {
                    "SecretKey": {
                      "type": "string",
                      "description": "The secret that the worker should use as the basic auth password\n(along with `workerID` as username) to authenticate to the\n[#tag/Action-Worker-Execution](Action Worker Execution API)\n"
                    }
                  }
                }
              ]
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ]
      }
    },
    "/teams/{teamname}/action-workers/{workerID}": {
      "get": {
        "summary": "Get an worker",
        "description": "Gets an action worker",
        "operationId": "get-worker",
        "x-visible": true,
        "tags": [
          "Action Workers"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workerID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Worker"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ]
      },
      "patch": {
        "summary": "Update an worker",
        "description": "Updates an action worker",
        "operationId": "update-worker",
        "x-visible": true,
        "tags": [
          "Action Workers"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workerID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "update",
            "in": "body",
            "description": "The updated worker attributes",
            "schema": {
              "type": "object",
              "description": "Worker Update",
              "properties": {
                "action": {
                  "$ref": "#/definitions/Worker"
                },
                "mask": {
                  "$ref": "#/definitions/UpdateMask"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "schema": {
              "$ref": "#/definitions/Worker"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ]
      },
      "delete": {
        "summary": "Delete a worker",
        "description": "Deletes a registered action worker",
        "operationId": "delete-worker",
        "x-visible": true,
        "tags": [
          "Action Workers"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workerID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted",
            "schema": {
              "$ref": "#/definitions/Empty"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ]
      }
    },
    "/teams/{teamname}/action-workers/{workerID}/tasks": {
      "get": {
        "summary": "List all tasks locked by a worker",
        "description": "Lists all tasks currently being executed by a specific worker. Supports\npaging and sorting.\n",
        "operationId": "get-tasks",
        "x-visible": true,
        "tags": [
          "Action Workers"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workerID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "description": "A page of acquired tasks",
              "properties": {
                "nextPageToken": {
                  "type": "string",
                  "description": "the token to use to retrieve the next page of results"
                },
                "tasks": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PendingWorkerTask"
                  }
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ]
      }
    },
    "/worker-controls": {
      "get": {
        "summary": "List worker controls",
        "description": "Lists all action worker controls. Supports paging and sorting.\n\nWorker controls are used to temporary block action execution for targeted workers, actions, tags, etc.\n",
        "operationId": "list-worker-controls",
        "x-visible": true,
        "tags": [
          "Action Worker Control"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "description": "A page of worker controls",
              "properties": {
                "nextPageToken": {
                  "type": "string",
                  "description": "the token to use to retrieve the next page of results"
                },
                "workers": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/WorkerControl"
                  }
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "admin_team_user_key": []
          }
        ]
      },
      "post": {
        "summary": "Create worker control",
        "description": "Worker Controls limit which tasks are eligible to be acquired by a worker.\nTo stop all worker execution, create a Worker Control with `stopAllExecution`\nset to `true`. Otherwise you can stop a specific `taskID`, `runID`, `rootRunID`,\n`workerID`, `actionID`, `teamName` or set of `tags`.\n",
        "operationId": "create-worker-control",
        "x-visible": true,
        "tags": [
          "Action Worker Control"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "worker",
            "in": "body",
            "description": "The worker to register",
            "schema": {
              "$ref": "#/definitions/Worker"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/WorkerControl"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "admin_team_user_key": []
          }
        ]
      },
      "delete": {
        "summary": "Delete worker controls",
        "description": "Delete all workers and allow action execution to proceed unrestricted\n",
        "operationId": "delete-worker-controls",
        "x-visible": true,
        "tags": [
          "Action Worker Control"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Deleted",
            "schema": {
              "$ref": "#/definitions/Empty"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "admin_team_user_key": []
          }
        ]
      }
    },
    "/worker-controls/{controlID}": {
      "get": {
        "summary": "Get worker control",
        "description": "Gets a worker control",
        "operationId": "get-worker-control",
        "x-visible": true,
        "tags": [
          "Action Worker Control"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "controlID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkerControl"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "admin_team_user_key": []
          }
        ]
      },
      "patch": {
        "summary": "Update worker control",
        "description": "Updates a worker control.\n",
        "operationId": "update-worker-control",
        "x-visible": true,
        "tags": [
          "Actions"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "controlID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "update",
            "in": "body",
            "description": "The updated worker control attributes",
            "schema": {
              "type": "object",
              "description": "Worker Control Update",
              "properties": {
                "action": {
                  "$ref": "#/definitions/WorkerControl"
                },
                "mask": {
                  "$ref": "#/definitions/UpdateMask"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "schema": {
              "$ref": "#/definitions/WorkerControl"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "admin_team_user_key": []
          }
        ]
      },
      "delete": {
        "summary": "Delete worker control",
        "description": "Deletes a worker control",
        "operationId": "delete-worker-control",
        "x-visible": true,
        "tags": [
          "Action Worker Control"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "controlID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted",
            "schema": {
              "$ref": "#/definitions/Empty"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "admin_team_user_key": []
          }
        ]
      }
    },
    "/action-workers/{workerID}/acquire-task": {
      "post": {
        "summary": "Acquire a task",
        "description": "Acquires a lock on a single task for this worker to execute.\n`lockDurationSeconds` can be up to 300 (5 minutes). It defaults to 30 if not\nspecified. If `waitTimeMillis` is not specified, this request will return\nimmediately, either with a `\"status\": \"success\"` and a `\"task\"` in the body,\nor with a `\"status\": \"timeout\"` and a `null` `\"task\"` in the body. If `waitTimeMillis` is specified, the request will block up to the requested\nnumber of milliseconds waiting for a task to be ready to acquire.\n`waitTimeMillis` must be between `500` (0.5 seconds) and `60000` (1 minute).\n",
        "operationId": "acquire-worker-task",
        "x-visible": true,
        "tags": [
          "Action Worker Execution"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "workerID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "AcquireTaskParams",
            "in": "body",
            "description": "Acquire Task Parameters",
            "schema": {
              "type": "object",
              "properties": {
                "lockDurationSeconds": {
                  "type": "integer",
                  "description": "The number of seconds to hold a lock on the acquired task",
                  "minimum": 5,
                  "maximum": 300,
                  "default": 30
                },
                "waitTimeMillis": {
                  "type": "integer",
                  "description": "The number of milliseconds to wait for a task to be ready to acquire.",
                  "minimum": 0,
                  "maximum": 60000,
                  "default": 0
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "description": "Acquired Task",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "timeout",
                    "success"
                  ]
                },
                "lockRequestID": {
                  "$ref": "schema/UUID/UUID.yaml"
                },
                "waitingTaskCount": {
                  "type": "integer",
                  "description": "The number of enqueued tasks remaining for this worker"
                },
                "task": {
                  "$ref": "#/definitions/PendingWorkerTask"
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "worker_key": []
          }
        ]
      }
    },
    "/action-workers/{workerID}/batch-acquire-tasks": {
      "post": {
        "summary": "Acquire a task",
        "description": "Acquires a lock on several tasks for this worker to execute.\n`lockDurationSeconds` and `waitTimeMillis` work just like they do when\n[acquiring a single task](#acquire-a-task-to-execute). The batch version of\nthis call takes an additional parameter `maxTaskCount`.\n\n`maxTaskCount` indicates the maximum number of tasks to acquire locks on.\n`maxTaskCount` must be specified and must be an integer between `1`\nand `100` inclusive.\n\n*Note:* The response body includes a `lockRequestID`, `count`,\n`waitingTaskCount` and `tasks` array. `count` may be greater than the\nlength of the `tasks` array, in which case the caller should page\nthrough the `/worers/{workerID}/tasks?lockRequestID={lockRequestID}`\nresults to get all locked tasks. `waitingTaskCount` is the number of\ntasks still waiting in the backlog for this worker after this batch\nof tasks.\n",
        "x-visible": true,
        "tags": [
          "Action Worker Execution"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "workerID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "AcquireTasksParams",
            "in": "body",
            "description": "Acquire Tasks Parameters",
            "schema": {
              "type": "object",
              "properties": {
                "lockDurationSeconds": {
                  "type": "integer",
                  "description": "The number of seconds to hold a lock on the acquired task",
                  "minimum": 5,
                  "maximum": 300,
                  "default": 30
                },
                "waitTimeMillis": {
                  "type": "integer",
                  "description": "The number of milliseconds to wait for a task to be ready to acquire.",
                  "minimum": 0,
                  "maximum": 60000,
                  "default": 0
                },
                "maxTaskCount": {
                  "type": "integer",
                  "description": "The maximum number of tasks to acquire in this request",
                  "minimum": 1,
                  "maximum": 100
                }
              },
              "required": [
                "maxTaskCount"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "description": "Acquired Tasks",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "timeout",
                    "success"
                  ]
                },
                "lockRequestID": {
                  "$ref": "schema/UUID/UUID.yaml"
                },
                "count": {
                  "type": "integer",
                  "description": "The total number of tasks acquired. Note that this may be\ngreater than the number of tasks in the tasks array, in\nwhich case all acquried tasks can be acquired by paging\nthrough the\n`/action-workers/{workerID}/tasks?lockRequestID={lockRequestID}`\nresults.\n"
                },
                "waitingTaskCount": {
                  "type": "integer",
                  "description": "The number of enqueued tasks remaining for this worker in the\nbacklog\n"
                },
                "tasks": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PendingWorkerTask"
                  }
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "worker_key": []
          }
        ],
        "operationId": "batch-acquire-tasks"
      }
    },
    "/action-workers/{workerID}/tasks": {
      "get": {
        "summary": "List all tasks locked by a worker",
        "description": "Lists all tasks currently being executed by a specific worker.\nUse the `?lockRequestID` query parameter to request only those\ntasks acquired in a specific batch-acquire-tasks request.\nSupports paging and sorting.\n",
        "operationId": "list-workers",
        "x-visible": true,
        "tags": [
          "Action Workers"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "workerID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "lockRequestID",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "description": "A page of acquired tasks",
              "properties": {
                "nextPageToken": {
                  "type": "string",
                  "description": "the token to use to retrieve the next page of results"
                },
                "tasks": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PendingWorkerTask"
                  }
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "worker_key": []
          }
        ]
      }
    },
    "/action-workers/{workerID}/tasks/{taskID}/update-task": {
      "post": {
        "summary": "Update a task",
        "description": "Update a task that is being processed. This can be used to update the status\nof a task, extend the lock duration and update output fields. By keeping the\ninitial `lockDurationSeconds` small and repeatedly calling this endpoint to\nextend the lock, this endpoint serves as a health check for long-running\nactions.\n\nThe request body may optionally contain a `progressStatus` field, a\n`progressPercent` field and a `lockDurationSeconds` field. The\n`progressStatus` field can be set to a description of the worker's progress\nin executing this task, for example `verifying results` or `performing OCR`.\nThe `progressPercent` field is an integer between `0` and `99` representing\nhow close to completion this task is. The `lockDurationSeconds` field can be\nset to extend the duration of the currently held lock on this task.\n\nAdditionally, the body may contain fields for each of the named output\nparameters of the action. For example, if you have an output field named\n`\"spreadsheet\"` of type `file`, you would add a `file` field to the request\nbody named `spreadsheet`. That would look like:\n\n```\n-----------------------------1234-boundary\nContent-Disposition: form-data; name=\"lockDurationSeconds\"\n\n30\n\n-----------------------------1234-boundary\nContent-Disposition: form-data; name=\"progressPercent\"\n\n80\n\n-----------------------------1234-boundary\nContent-Disposition: form-data; name=\"progressStatus\"\n\nverifying results\n\n-----------------------------1234-boundry\nContent-Disposition: form-data; name=\"spreadsheet\"; filename=\"result.csv\"\nContent-Type: text/csv\n\nColumn 1, Column 2, ...\n```\n",
        "operationId": "update-worker-task",
        "x-visible": true,
        "tags": [
          "Action Worker Execution"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "workerID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "taskID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "progressPercent",
            "in": "formData",
            "type": "integer",
            "description": "The percentage of the work on this task that has been completed"
          },
          {
            "name": "progressStatus",
            "in": "formData",
            "type": "string",
            "description": "A description of how work on the task is progressing"
          },
          {
            "name": "lockDurationSeconds",
            "in": "formData",
            "type": "integer",
            "description": "The number of seconds to extend a lock on the acquired task"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "description": "Acquired Task",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "timeout",
                    "success"
                  ]
                },
                "lockRequestID": {
                  "$ref": "schema/UUID/UUID.yaml"
                },
                "task": {
                  "$ref": "#/definitions/PendingWorkerTask"
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "worker_key": []
          }
        ]
      }
    },
    "/action-workers/{workerID}/tasks/{taskID}/complete-task": {
      "post": {
        "summary": "Complete a task",
        "description": "Completes a task and sets the `output` fields of that task. Any action output\nthat is not included in the body and was not previously set with an\n[update task](#update-a-task) call will be set to `null`. Outputs that were\npreviously set can be overwritten by including them in the request body.\n\nThe body may contain fields for each of the named output parameters of the\naction. For example, if you have an output field named `\"spreadsheet\"` of\ntype `file` and a `string` field named `\"summary\"`, you would add a `file`\nfield to the request body named `spreadsheet` and a string field named\n`summary`. That would look like:\n\n```\n-----------------------------1234-boundary\nContent-Disposition: form-data; name=\"summary\"\n\nThis is some summary text\n\n-----------------------------1234-boundry\nContent-Disposition: form-data; name=\"spreadsheet\"; filename=\"result.csv\"\nContent-Type: text/csv\n\nColumn 1, Column 2, ...\n```\n",
        "operationId": "complete-worker-task",
        "x-visible": true,
        "tags": [
          "Action Worker Execution"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "workerID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "taskID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "description": "Acquired Task",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "timeout",
                    "success"
                  ]
                },
                "lockRequestID": {
                  "$ref": "schema/UUID/UUID.yaml"
                },
                "task": {
                  "$ref": "#/definitions/PendingWorkerTask"
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "worker_key": []
          }
        ]
      }
    },
    "/action-workers/{workerID}/tasks/{taskID}/files/{fileID}/download": {
      "get": {
        "summary": "Download an input file",
        "description": "Download an input file from an acquired task. The input `value`\nwill contain the `fileID` that can be used with this endpoint.\n\nThe response will stream the file after setting the `Cache-Control`,\n`Content-Type`, `Content-Disposition`, `Content-Length` and `ETag`\nheaders.\n",
        "operationId": "get-worker-task-file",
        "x-visible": true,
        "tags": [
          "Action Worker Execution"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "workerID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "taskID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fileID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "file"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Cache-Control": {
                "type": "string"
              },
              "Content-Type": {
                "type": "string"
              },
              "Content-Disposition": {
                "type": "string"
              },
              "Content-Length": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "worker_key": []
          }
        ]
      }
    },
    "/action-workers/{workerID}/tasks/{taskID}/comments": {
      "post": {
        "summary": "Post a comment",
        "description": "Post a comment to a task\n",
        "operationId": "post-comment-to-worker-task",
        "x-visible": true,
        "tags": [
          "Action Worker Execution"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "workerID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "taskID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "PostCommentParams",
            "in": "body",
            "description": "Post Comment Parameters",
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "type": "string",
                  "description": "The text of the comment to post"
                }
              },
              "required": [
                "comment"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "description": "The posted comment",
              "properties": {
                "comment": {
                  "type": "string",
                  "description": "The text of the posted comment"
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "worker_key": []
          }
        ]
      }
    },
    "/teams/{teamname}/user-tokens": {
      "get": {
        "summary": "List User Tokens",
        "description": "Lists all User Tokens visible to user. Admins may see all users' keys; members may see only their own keys",
        "operationId": "list-user-tokens",
        "x-visible": true,
        "tags": [
          "User Tokens"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "allUsers",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Return User Tokens for all team members. Only usable by Team Admins."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "description": "A page of User Tokens",
              "properties": {
                "nextPageToken": {
                  "type": "string",
                  "description": "the token to use to retrieve the next page of results"
                },
                "userTokens": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UserToken"
                  }
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "examples": {
              "User Tokens": {
                "nextPageToken": null,
                "userTokens": [
                  {
                    "userTokenID": "1ddef079-dd45-4619-a3bd-e211105d8038",
                    "userID": null,
                    "teamName": "my-team",
                    "displayName": "My User Token",
                    "status": "requested",
                    "creatorIPAddress": "15.83.91.131",
                    "approverIPAddress": null,
                    "lastSeenIPAddress": null,
                    "lastSeenTime": null,
                    "approvedTime": null,
                    "revokedTime": null,
                    "firstSixTokenChars": "ZjdkND"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ]
      },
      "post": {
        "summary": "Create new User Token",
        "description": "Create a new User Token in a requested state",
        "operationId": "create-user-token",
        "x-visible": true,
        "tags": [
          "User Tokens"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-forwarded-for",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "UserToken Body",
            "in": "body",
            "schema": {
              "type": "object",
              "description": "A JSON object with creatable User Token properties",
              "properties": {
                "displayName": {
                  "type": "string",
                  "description": "displayName to apply to User Token"
                },
                "status": {
                  "type": "string",
                  "description": "Status to apply to User Token. Options: \"requested\", \"approved\""
                }
              }
            },
            "x-examples": {
              "Create Approved User Token": {
                "displayName": "My User Token",
                "status": "approved"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserToken"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "examples": {
              "Example User Token": {
                "userTokenID": "1ddef079-dd45-4619-a3bd-e211105d8038",
                "userID": null,
                "teamName": "my-team",
                "displayName": "My User Token",
                "status": "requested",
                "creatorIPAddress": "15.83.91.131",
                "approverIPAddress": null,
                "lastSeenIPAddress": null,
                "lastSeenTime": null,
                "approvedTime": null,
                "revokedTime": null,
                "token": "ZjdkNDI0Yjg1MDBjNDdlZmMyNjI2YjIwZmFiZTFhMDFmNjlkMWJkMzBkZGQzNzdjZDMwNGM1NzU2YzhmYmU5NCRwcm9jZXNzLXRlc3RlcnMucHVzaGJvdC5jb20kdGVzdA==",
                "firstSixTokenChars": "ZjdkND"
              }
            }
          }
        }
      }
    },
    "/teams/{teamname}/user-tokens/{userTokenID}": {
      "get": {
        "summary": "Get User Token",
        "description": "If authenticated, get User Token",
        "operationId": "get-user-token",
        "x-visible": true,
        "tags": [
          "User Tokens"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "userTokenID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserToken"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "examples": {
              "My User Token": {
                "userTokenID": "1ddef079-dd45-4619-a3bd-e211105d8038",
                "userID": null,
                "teamName": "my-team",
                "displayName": "My User Token",
                "status": "requested",
                "creatorIPAddress": "15.83.91.131",
                "approverIPAddress": null,
                "lastSeenIPAddress": null,
                "lastSeenTime": null,
                "approvedTime": null,
                "revokedTime": null,
                "firstSixTokenChars": "ZjdkND"
              }
            }
          }
        }
      }
    },
    "/teams/{teamname}/user-tokens/{userTokenID}:approve": {
      "post": {
        "summary": "Approve User Token",
        "description": "Approve an existing User Token that is currently in a requested state\nUsed as part of the web approval flow when User Token is created by the SDK Client.\n",
        "operationId": "approve-user-token",
        "x-visible": true,
        "tags": [
          "User Tokens"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "userTokenID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-forwarded-for",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserToken"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "examples": {
              "My User Token": {
                "userTokenID": "1ddef079-dd45-4619-a3bd-e211105d8038",
                "userID": null,
                "teamName": "my-team",
                "displayName": "My User Token",
                "status": "requested",
                "creatorIPAddress": "15.83.91.131",
                "approverIPAddress": null,
                "lastSeenIPAddress": null,
                "lastSeenTime": null,
                "approvedTime": null,
                "revokedTime": null,
                "firstSixTokenChars": "ZjdkND"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ]
      }
    },
    "/teams/{teamname}/user-tokens/{userTokenID}:poll": {
      "post": {
        "summary": "Poll for approved User Token",
        "description": "Poll for a User Token with \"approved\" status; supports long polling query params.\nUsed as part of the web approval flow when User Token is created by the SDK Client.\n",
        "operationId": "poll-user-token",
        "x-visible": true,
        "tags": [
          "User Tokens"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "userTokenID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "waitTimeMillis",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "User Token Poll Body",
            "in": "body",
            "schema": {
              "type": "object",
              "description": "A JSON object with a \"secret\" property corresponding to User Token secret"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserToken"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "examples": {
              "Approved User Token": {
                "userTokenID": "1ddef079-dd45-4619-a3bd-e211105d8038",
                "userID": "3a16b211-4a86-9292-ff3c-29ca36514162",
                "teamName": "my-team",
                "displayName": "My User Token",
                "status": "approved",
                "creatorIPAddress": "15.83.91.131",
                "approverIPAddress": "15.83.91.131",
                "lastSeenIPAddress": null,
                "lastSeenTime": null,
                "approvedTime": null,
                "revokedTime": null,
                "firstSixTokenChars": "ZjdkND"
              }
            }
          }
        }
      }
    },
    "/teams/{teamname}/user-tokens/{userTokenID}:revoke": {
      "post": {
        "summary": "Revoke User Token",
        "description": "Revoke an existing User Token. Admins may revoke any user's User Token; members may only revoke their own User Tokens",
        "operationId": "revoke-user-token",
        "x-visible": true,
        "tags": [
          "User Tokens"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "userTokenID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserToken"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "examples": {
              "Revoked User Token": {
                "userTokenID": "1ddef079-dd45-4619-a3bd-e211105d8038",
                "userID": null,
                "teamName": "my-team",
                "displayName": "My User Token",
                "status": "revoked",
                "creatorIPAddress": "15.83.91.131",
                "approverIPAddress": null,
                "lastSeenIPAddress": null,
                "lastSeenTime": null,
                "approvedTime": null,
                "revokedTime": null,
                "firstSixTokenChars": "ZjdkND"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ]
      }
    },
    "/teams/{teamname}/authinfo": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Teams"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "getTeamAuth",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "operationId": "get-authinfo",
        "summary": "Get authinfo",
        "description": "Get authinfo for a specific team",
        "tags": []
      }
    },
    "/teams/{teamname}/auth": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "authWords",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "system",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Teams"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "401 response"
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "authUser",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "operationId": "get-auth",
        "summary": "Get auth",
        "description": "Get auth for a specific team",
        "tags": []
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Teams"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "authUser",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "x-pushbot-ratelimit-allowed-points": 100,
        "x-pushbot-ratelimit-keyprefix": "authUser",
        "operationId": "authenticate-user",
        "summary": "Authenticate user",
        "description": "Authenticate a specific user",
        "tags": []
      }
    },
    "/teams/{teamname}/community-auth": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Community-Auth"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "operationId": "community-auth",
        "summary": "Community auth",
        "description": "Community auth",
        "tags": []
      }
    },
    "/teams/{teamname}/saml/serviceProviderMetadata": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SAML-serviceProviderMetadata"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [],
        "x-pushbot-function": "serviceProviderMetadata",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "operationId": "get-service-provider-metadata",
        "summary": "Get service provider metadata",
        "description": "Get service provider metadata for a specific team",
        "tags": []
      }
    },
    "/teams/{teamname}/saml/login": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "302": {
            "description": "302 response",
            "headers": {
              "Location": {
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [],
        "x-pushbot-function": "samlLogin",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "SAML login",
        "operationId": "saml-login",
        "description": "SAML login to a specific team",
        "tags": []
      }
    },
    "/teams/{teamname}/saml/auth": {
      "post": {
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SAML-auth"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [],
        "x-pushbot-function": "samlAuth",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Authenticate with SAML",
        "operationId": "authenticate-with-saml",
        "description": "Authenticate to a specific team with SAML",
        "tags": []
      }
    },
    "/teams/{teamname}/data-keys": {
      "post": {
        "summary": "Create encryption key",
        "tags": [
          "Teams"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Data-Key"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "x-pushbot-function": "createDataKey",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "description": "Create encryption key for a specific team",
        "operationId": "create-encryption-key"
      }
    },
    "/teams/{teamname}/files": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Files"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "listFiles",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "List files",
        "operationId": "listt-files",
        "description": "Get files for a specific team",
        "tags": []
      },
      "post": {
        "consumes": [
          "multipart/form-data",
          "application/octet-stream",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "file_size",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "done",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "content_type",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filename",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "multipart",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-content-md5",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "fileid",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "previous_version",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "number",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "part_size",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Files"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "createFile",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Create file",
        "operationId": "create-file",
        "description": "Create a file for a specific team",
        "tags": []
      }
    },
    "/teams/{teamname}/files/{fileid}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fileid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Files"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "getFile",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Get file",
        "operationId": "get-file",
        "description": "Get a file from a specific team",
        "tags": []
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fileid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Files"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "updateFile",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Update file",
        "operationId": "update-file",
        "description": "Update a file for a specific team",
        "tags": []
      },
      "delete": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fileid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Files"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "x-pushbot-function": "deleteFile",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Delete file",
        "operationId": "delete-file",
        "description": "Delete file from a specific team",
        "tags": []
      }
    },
    "/teams/{teamname}/files/{fileid}/copy": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fileid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Files"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "copyFile",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Copy file",
        "operationId": "copy-file",
        "description": "Copy a specific file for a specific team",
        "tags": []
      }
    },
    "/teams/{teamname}/files/{fileid}/download": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fileid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Files"
            }
          }
        },
        "x-pushbot-function": "getFileDownload",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Download file",
        "operationId": "download-file",
        "description": "Download a specific file from a specific team",
        "tags": []
      }
    },
    "/teams/{teamname}/forms/{webhookname}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "webhookname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webhooks"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "x-pushbot-function": "execWebhook",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Execute webhook",
        "operationId": "execute-webhook",
        "description": "Execute a specific webhook for a specific team",
        "tags": []
      },
      "post": {
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "webhookname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webhooks"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "x-pushbot-function": "execWebhook",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "x-pushbot-ratelimit-allowed-points": 120,
        "x-pushbot-ratelimit-keyprefix": "execWebhook",
        "summary": "Execute webform webhook",
        "operationId": "execute-webform-webhook",
        "description": "Execute webform webhook",
        "tags": []
      }
    },
    "/teams/{teamname}/groups": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Teams"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "x-pushbot-function": "listGroups",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Get groups",
        "operationId": "get-froups",
        "description": "Get groups for a specific team",
        "tags": []
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Teams"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "x-pushbot-function": "createGroup",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Create group",
        "operationId": "create-group",
        "description": "Create group in a specific team",
        "tags": []
      }
    },
    "/teams/{teamname}/groups/{username}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Teams"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "x-pushbot-function": "getGroup",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Get a user's groups",
        "operationId": "get-users-groups",
        "description": "Get all the groups a user is in",
        "tags": []
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Teams"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "x-pushbot-function": "updateGroup",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Update a user's groups",
        "operationId": "update-user-groups",
        "description": "Update the groups a user is in",
        "tags": []
      }
    },
    "/teams/{teamname}/groups/{username}/members": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Teams"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "x-pushbot-function": "listMembers",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "List group members",
        "operationId": "list-group-members",
        "description": "Get group members for a specific team",
        "tags": []
      }
    },
    "/teams/{teamname}/integrations": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Teams"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "x-pushbot-function": "listIntegrations",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "List integrations",
        "operationId": "list-integrations",
        "description": "Get integrations for a specific team",
        "tags": []
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Teams"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "x-pushbot-function": "createIntegration",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Create integration",
        "operationId": "create-integration",
        "description": "Create integration for a specific team",
        "tags": []
      }
    },
    "/teams/{teamname}/integrations/health": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Teams"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "x-pushbot-function": "getIntegrationHealth",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Integrations healthcheck",
        "operationId": "integrations-healthcheck",
        "description": "Healthy check for the integrations for a specific team",
        "tags": []
      }
    },
    "/teams/{teamname}/integrations/{username}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Teams"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "x-pushbot-function": "getIntegration",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Get integration",
        "operationId": "get-integration",
        "description": "Get integration by username for a specific team",
        "tags": []
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Teams"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "x-pushbot-function": "updateIntegration",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Update integration",
        "operationId": "update-integration",
        "description": "Update integration for a specific team",
        "tags": []
      },
      "delete": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Teams"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "x-pushbot-function": "deleteIntegration",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Delete integration",
        "operationId": "delete-integration",
        "description": "Delete a specific integration froma specific team",
        "tags": []
      }
    },
    "/teams/{teamname}/invites": {
      "get": {
        "summary": "List invites",
        "tags": [
          "Invites"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Invites"
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "404": {
            "description": "404 response"
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "listInvites",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "operationId": "list-invites",
        "description": "Get all the invites to a specific team"
      },
      "post": {
        "summary": "Create invite",
        "tags": [
          "Invites"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "invite",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InvitesNew"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Invites"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "createInvite",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "operationId": "create-invite",
        "description": "Create an invite to a specific team"
      }
    },
    "/teams/{teamname}/invites/{invitetoken}": {
      "get": {
        "tags": [],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "invitetoken",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Invites"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "x-pushbot-function": "getInvite",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Get invite",
        "operationId": "get-invite",
        "description": "Get an invite for a specific team"
      },
      "post": {
        "summary": "Create invite token",
        "tags": [
          "Invites"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "invitetoken",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Invites"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "x-pushbot-function": "acceptInvite",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "x-pushbot-ratelimit-allowed-points": 60,
        "x-pushbot-ratelimit-keyprefix": "acceptInvite",
        "operationId": "create-invite-token",
        "description": "Create an invite token for a specific team"
      }
    },
    "/teams/{teamname}/processes": {
      "get": {
        "summary": "List processes",
        "tags": [
          "Processes"
        ],
        "x-visible": true,
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "showOnStartMenu",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "owner",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "priority",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "createdBy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "published",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "export",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "after",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "listRoots",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Processes"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "listProcesses",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "operationId": "list-processes",
        "description": "Get a list of processes for a specific team"
      },
      "post": {
        "summary": "Create process",
        "tags": [
          "Processes"
        ],
        "x-visible": true,
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "process",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Processes"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Processes"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "createProcess",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "operationId": "create-process",
        "description": "Create a process for a specific team"
      }
    },
    "/teams/{teamname}/processes/{processname}": {
      "get": {
        "summary": "Get process",
        "tags": [
          "Processes"
        ],
        "x-visible": true,
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "includeChildren",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "processname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "export",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Processes"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "getProcess",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "operationId": "get-process-by-name",
        "description": "Get a specific process for a specific team"
      },
      "put": {
        "summary": "Update process",
        "tags": [
          "Processes"
        ],
        "x-visible": true,
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "processname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Processes"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "updateProcess",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "operationId": "update-process",
        "description": "Update a specific process"
      },
      "delete": {
        "summary": "Delete process",
        "tags": [
          "Processes"
        ],
        "x-visible": true,
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "processname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Processes"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "deleteProcess",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "operationId": "delete-process",
        "description": "Delete a specific process"
      }
    },
    "/teams/{teamname}/processes/{processid}:update-data-retention-policy": {
      "post": {
        "summary": "Updates a process data retention policy",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "processid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "durationCompletedBeforeDelete",
            "required": true,
            "x-examples": {
              "Set a deletion policy": {
                "durationCompletedBeforeDelete": "P1W"
              },
              "Clear a deletion policy": {
                "durationCompletedBeforeDelete": null
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "durationCompletedBeforeDelete": {
                  "type": "integer",
                  "description": "The duration a run must be completed before the run should be automatically deleted."
                }
              }
            },
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "durationCompletedBeforeDelete": {
                  "type": "integer"
                }
              }
            }
          }
        },
        "operationId": "update-process-data-retention-policy",
        "description": "Update a process data retention policy",
        "tags": []
      }
    },
    "/teams/{teamname}/processes/{processid}/writable-fields/{fieldname}": {
      "put": {
        "summary": "Add writable field",
        "tags": [
          "Processes"
        ],
        "x-visible": true,
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "processid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fieldname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "description": "Add a field to the list of writable fields on this process. If the field already exists, this has no action",
        "operationId": "add-writable-field"
      },
      "delete": {
        "summary": "Remove writable field",
        "tags": [
          "Processes"
        ],
        "x-visible": true,
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "processid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fieldname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "description": "Remove a writable field from this process",
        "operationId": "remove-writable-field"
      }
    },
    "/teams/{teamname}/processes/{processname}/files": {
      "get": {
        "summary": "List process files",
        "tags": [
          "Files"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "processname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Files"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "listFiles",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "description": "Retrieve a list of files from a process",
        "operationId": "list-process-files"
      },
      "post": {
        "summary": "Create process file",
        "tags": [
          "Files"
        ],
        "consumes": [
          "application/json",
          "multipart/form-data",
          "application/octet-stream",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "processname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Files"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "createFile",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "operationId": "create-process-file",
        "description": "Create a file for a specific process"
      }
    },
    "/teams/{teamname}/processes/{processname}/files/{fileid}": {
      "put": {
        "summary": "Update process file",
        "tags": [
          "Files"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fileid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "processname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Files"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "updateFile",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "description": "Update a file for a specific process",
        "operationId": "update-process-file"
      }
    },
    "/teams/{teamname}/processes/{processname}/runs": {
      "get": {
        "summary": "List process runs",
        "tags": [
          "Runs"
        ],
        "x-visible": true,
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The status of runs to get"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "processname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The beginning date to get runs from"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The end date to get runs from"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "columns",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "rows",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The number of rows to return in the response"
          },
          {
            "name": "after",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "includeChildren",
            "description": "Whether to include each runs tasks in the response"
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "includeWhollyOwned",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Runs"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "A message about why a 404 was returned"
                }
              },
              "required": [
                "message"
              ]
            },
            "examples": {
              "Example": {
                "message": "Process 262c0eab-1f10-47c3-b4af-6307c548346f not found"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "listRuns",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "description": "Get a list of runs for a process",
        "operationId": "list-process-runs"
      }
    },
    "/teams/{teamname}/processes/{processname}/steps": {
      "get": {
        "summary": "List process steps",
        "tags": [
          "Steps"
        ],
        "x-visible": true,
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "processname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Steps"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "listSteps",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "description": "Retrieve a list of steps for a process",
        "operationId": "list-process-steps"
      },
      "put": {
        "summary": "Update process step",
        "tags": [
          "Steps"
        ],
        "x-visible": true,
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "processname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Steps"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "updateStep",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "description": "Update a step in a process",
        "operationId": "update-process-steps"
      },
      "post": {
        "summary": "Create process step",
        "tags": [
          "Steps"
        ],
        "x-visible": true,
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "processname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Steps"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "createStep",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "description": "Create a step in a process",
        "operationId": "create-process-step"
      }
    },
    "/teams/{teamname}/processes/{processname}/steps/{stepname}": {
      "get": {
        "summary": "Get process step",
        "tags": [
          "Steps"
        ],
        "x-visible": true,
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "stepname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "processname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Steps"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "getStep",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "description": "Get a step in a process",
        "operationId": "get-process-step"
      },
      "put": {
        "summary": "Update process step",
        "tags": [
          "Steps"
        ],
        "x-visible": true,
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "stepname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "processname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Steps"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "updateStep",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "operationId": "update-process-step",
        "description": "Update a step in a process"
      },
      "delete": {
        "summary": "Delete process step",
        "tags": [
          "Processes",
          "Steps"
        ],
        "x-visible": true,
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "stepname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "processname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Steps"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "deleteStep",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "operationId": "delete-process-step",
        "description": "Delete a step in a process"
      }
    },
    "/teams/{teamname}/processes/{processname}/steps/{stepname}/files": {
      "get": {
        "summary": "List process step files",
        "tags": [
          "Files"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "stepname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "processname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Files"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "listFiles",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "description": "Get a list of files from a step in a process",
        "operationId": "list-process-step-files"
      },
      "post": {
        "summary": "Add process step file",
        "tags": [
          "Files"
        ],
        "consumes": [
          "application/json",
          "multipart/form-data",
          "application/octet-stream",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "stepname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "processname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Files"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "createFile",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "description": "Add a file to a step in a process",
        "operationId": "add-process-step-file"
      }
    },
    "/teams/{teamname}/processes/{processname}/steps/{stepname}/files/{fileid}": {
      "put": {
        "summary": "Update process step file",
        "tags": [
          "Files"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fileid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "stepname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "processname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Files"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "updateFile",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "description": "Update a file on a step in a process",
        "operationId": "update-process-step-file"
      }
    },
    "/teams/{teamname}/processes/{processname}/steps/{stepname}/test": {
      "get": {
        "summary": "Get process step test",
        "tags": [
          "Steps",
          "Test"
        ],
        "x-visible": true,
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "stepname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "processname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Empty"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "getUpstreamFields",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "description": "Get a test of a step in a process",
        "operationId": "get-process-step-test"
      },
      "post": {
        "summary": "Create procss step test",
        "tags": [
          "Steps",
          "Test"
        ],
        "x-visible": true,
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "stepname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "processname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Empty"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "testStep",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "description": "Create a test of a step in a process",
        "operationId": "create-process-step-test"
      }
    },
    "/teams/{teamname}/processes/{processname}/triggers": {
      "get": {
        "tags": [
          "Triggers"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "processname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webhooks"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "listTriggersForProcess",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "List process triggers",
        "description": "Get all the triggers for a specific process",
        "operationId": "list-process-triggers"
      }
    },
    "/teams/{teamname}/processes/{processid}/tables": {
      "get": {
        "tags": [
          "Tables"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "processid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Tables"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "listProcessTables",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "List process tables",
        "operationId": "list-process-tables",
        "description": "Get the tables for a specific process"
      }
    },
    "/teams/{teamname}/processes/{processid}/tables/{tableid}": {
      "post": {
        "tags": [
          "Tables"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "processid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Tables"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "linkProcessTable",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Link process table",
        "operationId": "link-process-table",
        "description": "Link a process table"
      },
      "delete": {
        "tags": [
          "Tables"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "processid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Tables"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "unlinkProcessTable",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Unlink process table",
        "operationId": "unlink-process-table",
        "description": "Unlink a process table"
      }
    },
    "/teams/{teamname}/processes/{processid}/predictors": {
      "get": {
        "tags": [
          "Predictors"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "processid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Predictors"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "listProcessPredictors",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "list process predictors",
        "operationId": "list-process-predictors",
        "description": "Get predictors for a specific process"
      }
    },
    "/teams/{teamname}/processes/{processid}/predictors/{predictorid}": {
      "post": {
        "tags": [
          "Predictors"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "processid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "predictorid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Predictors"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "linkProcessPredictor",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Link process predictor",
        "operationId": "link-process-predictor",
        "description": "Link process predictor"
      },
      "delete": {
        "tags": [
          "Predictors"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "processid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "predictorid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Predictors"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "unlinkProcessPredictor",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Unlink process predictor",
        "operationId": "unlink-process-predictor",
        "description": "Unlink process predictor"
      }
    },
    "/teams/{teamname}/processes/{processid}/childprocesses": {
      "get": {
        "tags": [
          "Processes"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "processid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Processes"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "listProcessChildProcesses",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "operationId": "list-child-processes",
        "summary": "List child processes",
        "description": "Get child processes"
      }
    },
    "/teams/{teamname}/processes/{processid}/childprocesses/{childprocessid}": {
      "post": {
        "tags": [
          "Processes"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "processid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "childprocessid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Processes"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "linkProcessChildProcess",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "operationId": "link-child-process",
        "summary": "Link child process to parent",
        "description": "Link a child process to a parent process"
      },
      "delete": {
        "tags": [
          "Processes"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "processid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "childprocessid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Processes"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "unlinkProcessChildProcess",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Unlink child process from parent",
        "operationId": "unlink-child-process",
        "description": "Unlink a child process from a parent process"
      }
    },
    "/teams/{teamname}/processes/{processid}/parentprocesses": {
      "get": {
        "tags": [
          "Processes"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "processid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Processes"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "listProcessParentProcesses",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "List parent processes",
        "operationId": "list-parent-processes",
        "description": "Get the parent processes of a specific process"
      }
    },
    "/teams/{teamname}/processes/{processid}/parentprocesses/{parentprocessid}": {
      "post": {
        "tags": [
          "Processes"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "processid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "parentprocessid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Processes"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "linkProcessParentProcess",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Link parent process to child",
        "operationId": "link-parent-process",
        "description": "Link parent process to a specific child process"
      },
      "delete": {
        "tags": [
          "Processes"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "processid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "parentprocessid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Processes"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "unlinkProcessParentProcess",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "description": "Unlink parent process from a specific child process",
        "summary": "Unlink parent process from child",
        "operationId": "unlink-parent-process"
      }
    },
    "/teams/{teamname}/processes/{processid}/steps/{stepname}/evaluate-outputs": {
      "post": {
        "description": "Given a set of step configuration params, evaluate which output fields will be generated by the step.\n",
        "tags": [
          "Steps",
          "Fields"
        ],
        "x-visible": true,
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "processid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "stepname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "evaluateOutputs Request",
            "in": "body",
            "schema": {
              "type": "object",
              "description": "A set of key:value pairs, defining a value for each param's fieldName"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Fields"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "summary": "Evaluate step output fields",
        "operationId": "evaluate-step-output-fields"
      }
    },
    "/teams/{teamname}/processes/{processid}/steps/{stepname}/writable-fields/{fieldname}": {
      "put": {
        "summary": "Add writable field to step",
        "x-visible": true,
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "processid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "stepname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fieldname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "description": "Add a field to the list of writable fields on this step. If the field already exists, this has no action",
        "operationId": "add-writable-field-to-step",
        "tags": []
      },
      "delete": {
        "summary": "Remove writable field from step",
        "x-visible": true,
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "processid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "stepname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fieldname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "description": "Remove a field from the list of writable fields on this step. If the field does not exist, this has no action",
        "operationId": "remove-writable-field-from-step",
        "tags": []
      }
    },
    "/teams/{teamname}/processes/{processid}/custom-action": {
      "post": {
        "tags": [
          "Processes"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "processid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Processes"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "createCustomAction",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Create custom action",
        "operationId": "create-custom-action",
        "description": "Create custom action"
      },
      "delete": {
        "tags": [
          "Processes"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "processid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Processes"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "deleteCustomAction",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Delete custom action",
        "operationId": "delete-custom-action",
        "description": "Delete a specific custom action"
      }
    },
    "/teams/{teamname}/processes/{processname}/webhooks": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "processname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webhooks"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "listWebhooks",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "List process webhooks",
        "operationId": "list-process-webhooks",
        "description": "Get all the webhooks for a specific process"
      }
    },
    "/teams/{teamname}/processes/{processname}/visibility": {
      "post": {
        "tags": [
          "Processes"
        ],
        "x-visible": true,
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "processname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "includeIgnored",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Fields"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "evalConditions",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Get process visibility",
        "operationId": "get-process-visibility",
        "description": "Get process visibility"
      }
    },
    "/teams/{teamname}/processes/{processname}/upcoming": {
      "get": {
        "tags": [
          "Upcoming"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "processname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Upcoming"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "listUpcoming",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "List upcomings",
        "operationId": "list-upcomings",
        "description": "Get upcomings for a specific process"
      },
      "post": {
        "tags": [],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "processname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Upcoming"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "createUpcoming",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "x-pushbot-ratelimit-allowed-points": 30,
        "x-pushbot-ratelimit-keyprefix": "createUpcoming",
        "summary": "Create upcoming",
        "operationId": "create-upcoming",
        "description": "Create an upcoming for a specific process"
      }
    },
    "/teams/{teamname}/processes/{processname}/upcoming/{upcomingid}": {
      "get": {
        "tags": [
          "Upcoming"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "upcomingid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "processname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Upcoming"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "getUpcoming",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Get upcoming",
        "operationId": "get-process-upcoming",
        "description": "Get a specific upcoming for a specific process"
      },
      "put": {
        "tags": [
          "Upcoming"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "upcomingid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "processname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Upcoming"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "updateUpcoming",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "x-pushbot-ratelimit-allowed-points": 30,
        "x-pushbot-ratelimit-keyprefix": "updateUpcoming",
        "summary": "Update upcoming",
        "operationId": "update-process-upcoming",
        "description": "Update a specific upcoming for a specific process"
      },
      "delete": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "upcomingid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "processname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Upcoming"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "404": {
            "description": "No upcoming exists for the given team name, processID, and upcomingID",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "No upcoming exists with id 12341234-1234-1234-1234-123412341234 for process 43214321-4321-4321-4321-432143214321"
                }
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "deleteUpcoming",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Delete upcoming",
        "operationId": "delete-process-upcoming",
        "description": "Delete a specific upcoming from a specific process",
        "tags": []
      }
    },
    "/teams/{teamname}/processes/{processname}/fields": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "processname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Fields"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "404": {
            "description": "404 response"
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "listFields",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "List process fields",
        "operationId": "list-process-fields",
        "description": "Get the fields for a specific process",
        "tags": []
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "processname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Fields"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "createField",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Create process field",
        "operationId": "create-process-field",
        "description": "Create a new field for a specific process",
        "tags": []
      }
    },
    "/teams/{teamname}/processes/{processname}/fields/{fieldname}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "processname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "fieldname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Fields"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "getField",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Get process field",
        "operationId": "get-process-field",
        "description": "Get a specific field for a specific process",
        "tags": []
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "processname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fieldname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Fields"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "updateField",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Update process field",
        "operationId": "update-process-field",
        "description": "Update a specific field for a specific process",
        "tags": []
      },
      "delete": {
        "tags": [],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "processname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fieldname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Fields"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "deleteField",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Delete process field",
        "operationId": "delete-process-field",
        "description": "Delete a specific field for a specific process"
      }
    },
    "/teams/{teamname}/processes/{processid}/rights": {
      "get": {
        "tags": [],
        "summary": "List process rights",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "processid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProcessRights"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "404": {
            "description": "404 response"
          }
        },
        "description": "Gets the rights the calling user has for this process",
        "operationId": "list-process-rights"
      }
    },
    "/teams/{teamname}/process-exports": {
      "post": {
        "summary": "Create process export",
        "tags": [
          "ProcessExports"
        ],
        "x-visible": true,
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "processExport Request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Process-Exports"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Process-Exports"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "operationId": "create-process-export",
        "description": "Create a processExport"
      }
    },
    "/teams/{teamname}/process-exports/{exportid}": {
      "get": {
        "summary": "Get processExport",
        "tags": [
          "ProcessExports"
        ],
        "x-visible": true,
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "exportid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Process-Exports"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "operationId": "get-process-export",
        "description": "Get a processExport"
      }
    },
    "/teams/{teamname}/process-imports": {
      "post": {
        "summary": "Create processImport",
        "tags": [
          "ProcessImports"
        ],
        "x-visible": true,
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "processImport Request",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Process-Imports"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Process-Imports"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "operationId": "create-process-import",
        "description": "Create a processImport"
      }
    },
    "/teams/{teamname}/process-imports/{importid}": {
      "get": {
        "summary": "Get processImport",
        "tags": [
          "ProcessImports"
        ],
        "x-visible": true,
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "importid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Process-Imports"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "operationId": "get-process-import",
        "description": "Get a specific processImport"
      }
    },
    "/teams/{teamname}/runs": {
      "get": {
        "summary": "List runs",
        "tags": [
          "Runs"
        ],
        "x-visible": true,
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "owner",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "columns",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "rows",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "after",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Runs"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "listRuns",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "operationId": "list-runs",
        "description": "Get a list of runs for a specific team"
      },
      "post": {
        "tags": [],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Runs"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "createRun",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "x-pushbot-ratelimit-allowed-points": 30,
        "x-pushbot-ratelimit-keyprefix": "createRun",
        "summary": "Create run",
        "operationId": "create-run",
        "description": "Create a run"
      }
    },
    "/teams/{teamname}/runs/{runid}": {
      "get": {
        "tags": [],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "runid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "includeChildren",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Runs"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "getRun",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Get run",
        "operationId": "get-run",
        "description": "Get a specific run "
      },
      "put": {
        "tags": [],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "runid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Runs"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "updateRun",
        "x-amazon-apigateway-integration": {
          "requestTemplates": {
            "application/json": "{\n    \"function\": \"updateRun\",\n    \"stage\" : \"$stageVariables.env\",\n    \"apiKey\": \"$context.identity.apiKey\",\n    \"userKey\": \"$input.params('x-user-key')\",\n    \"teamName\": \"$input.params('teamname')\",\n    \"runID\": \"$input.params('runid')\",\n    \"body\" : $input.json('$')\n}"
          },
          "type": "aws"
        },
        "summary": "Update run",
        "operationId": "update-run",
        "description": "Update a specific run"
      }
    },
    "/teams/{teamname}/runs/{runid}/visibility": {
      "post": {
        "tags": [],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "runid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Fields"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "evalConditions",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Get run visibility",
        "operationId": "get-run-visibility",
        "description": "Get the visibility of a specific run"
      }
    },
    "/teams/{teamname}/runs/{runid}/log": {
      "get": {
        "tags": [
          "support"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "runid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Runs"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "getAuditLog",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Get log",
        "operationId": "get-log",
        "description": "Get the audit log of a specific run"
      }
    },
    "/teams/{teamname}/runs/{runid}/comments": {
      "get": {
        "tags": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "runid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "after",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Comments"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "listComments",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "List run comments",
        "operationId": "list-run-comments",
        "description": "Get the comments for a specific run"
      },
      "post": {
        "tags": [],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "runid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "suppressNotification",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Comments"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Comments"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "addComment",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "x-pushbot-ratelimit-allowed-points": 30,
        "x-pushbot-ratelimit-keyprefix": "addComment",
        "summary": "Create run comment",
        "operationId": "create-run-comment",
        "description": "Create a comment on a specific run"
      }
    },
    "/teams/{teamname}/runs/{runid}/files": {
      "get": {
        "tags": [],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "runid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Files"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "listFiles",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "List run files",
        "operationId": "list-run-files",
        "description": "Get the files for a specific run"
      },
      "post": {
        "tags": [],
        "consumes": [
          "application/json",
          "multipart/form-data",
          "application/octet-stream",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "runid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Files"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "createFile",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Create run file",
        "operationId": "create-run-file",
        "description": "Create a file for a specific run"
      }
    },
    "/teams/{teamname}/runs/{runid}/files/{fileid}": {
      "put": {
        "tags": [],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "runid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fileid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Files"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "updateFile",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Update run file",
        "operationId": "update-run-file",
        "description": "Update specific file for a run"
      }
    },
    "/teams/{teamname}/runs/{runid}/fields": {
      "get": {
        "tags": [],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "runid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Fields"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "404": {
            "description": "404 response"
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "listFields",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "List run fields",
        "operationId": "list-run-fields",
        "description": "Get fields for a specific run"
      },
      "post": {
        "tags": [],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "runid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Fields"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "createField",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Create run field",
        "operationId": "create-run-field",
        "description": "Create field for a specific run"
      }
    },
    "/teams/{teamname}/runs/{runid}/fields/{fieldname}": {
      "get": {
        "summary": "Get run field",
        "tags": [
          "Runs"
        ],
        "x-visible": true,
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "runid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "fieldname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Fields"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "getField",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "description": "Get a specific field from a specific run",
        "operationId": "get-run-field"
      },
      "put": {
        "summary": "Update run field",
        "tags": [
          "Runs"
        ],
        "x-visible": true,
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "runid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fieldname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Fields"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "updateField",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "description": "Update a specific field on a specific run",
        "operationId": "update-run-field"
      },
      "delete": {
        "summary": "Delete run field",
        "tags": [
          "Runs"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "runid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fieldname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Fields"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "deleteField",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "description": "Delete a specific field from a specific run",
        "operationId": "delete-run-field"
      }
    },
    "/teams/{teamname}/runs/{runid}/progress/{progressSecret}": {
      "get": {
        "tags": [],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "runid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "progressSecret",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Runs"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "getProgress",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Get run progress",
        "operationId": "get-run-progress",
        "description": "Get the process for a specific run"
      }
    },
    "/teams/{teamname}/runs/{runid}/requeue": {
      "post": {
        "summary": "Re-enqueue run tasks",
        "tags": [
          "Runs"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "runid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Tasks"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "requeueJobs",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "description": "Re-enqueue any ready tasks for a specific run",
        "operationId": "reenqueue-run-tasks"
      }
    },
    "/teams/{teamname}/runs/{runid}/tasks": {
      "get": {
        "summary": "List run tasks",
        "tags": [
          "Tasks"
        ],
        "x-visible": true,
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "runid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "after",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Tasks"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "listTasks",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "description": "Get all the tasks from a specific run",
        "operationId": "list-run-tasks"
      },
      "put": {
        "summary": "Update run task",
        "tags": [
          "Tasks"
        ],
        "x-visible": true,
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "runid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Tasks"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "updateTask",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "description": "Update a task in a specific run",
        "operationId": "update-run-tasks"
      },
      "post": {
        "summary": "Create run task",
        "tags": [
          "Tasks"
        ],
        "x-visible": true,
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "runid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Tasks"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "createTask",
        "x-amazon-apigateway-integration": {
          "requestTemplates": {
            "application/json": "{\n    \"function\": \"createTask\",\n    \"stage\" : \"$stageVariables.env\",\n    \"apiKey\": \"$context.identity.apiKey\",\n    \"userKey\": \"$input.params('x-user-key')\",\n    \"teamName\": \"$input.params('teamname')\",\n    \"runID\": \"$input.params('runid')\",\n    \"body\" : $input.json('$')\n}"
          },
          "type": "aws"
        },
        "x-pushbot-ratelimit-allowed-points": 30,
        "x-pushbot-ratelimit-keyprefix": "createTask",
        "description": "Create a task in a specific run",
        "operationId": "create-run-task"
      }
    },
    "/teams/{teamname}/runs/{runid}/tasks/{taskname}": {
      "get": {
        "summary": "Get run task",
        "tags": [
          "Tasks",
          "support"
        ],
        "x-visible": true,
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "runid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "taskname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Tasks"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "getTask",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "description": "Get a specific task from a specific run",
        "operationId": "get-run-task"
      },
      "put": {
        "summary": "Update run task",
        "tags": [
          "Tasks"
        ],
        "x-visible": true,
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "runid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "taskname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Tasks"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "updateTask",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "description": "Update a specific task in a specific run",
        "operationId": "update-run-task"
      },
      "delete": {
        "tags": [],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "runid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "taskname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Tasks"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "deleteTask",
        "x-amazon-apigateway-integration": {
          "requestTemplates": {
            "application/json": "{\n    \"function\": \"deleteTask\",\n    \"stage\" : \"$stageVariables.env\",\n    \"apiKey\": \"$context.identity.apiKey\",\n    \"userKey\": \"$input.params('x-user-key')\",\n    \"teamName\": \"$input.params('teamname')\",\n    \"runID\": \"$input.params('runid')\",\n    \"taskName\": \"$input.params('taskname')\"\n}"
          },
          "type": "aws"
        },
        "summary": "Delete run task",
        "operationId": "delete-run-task",
        "description": "Delete a specific task from a specific run"
      }
    },
    "/teams/{teamname}/runs/{runid}/tasks/{taskname}/files": {
      "get": {
        "summary": "List run task files",
        "tags": [
          "Tasks"
        ],
        "x-visible": true,
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "runid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "includeVersions",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "includeDownloadUrls",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "taskname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Files"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "listFiles",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "description": "Get all the files from a specific task in a specific run",
        "operationId": "list-run-task-files"
      },
      "post": {
        "tags": [],
        "consumes": [
          "application/json",
          "multipart/form-data",
          "application/octet-stream",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "runid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "taskname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Files"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "createFile",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Create run task file",
        "operationId": "create-run-task-file",
        "description": "Create a file for a specific task in a specific run"
      }
    },
    "/teams/{teamname}/runs/{runid}/tasks/{taskname}/files/{fileid}": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "runid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "taskname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fileid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Files"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "updateFile",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Update run task file",
        "operationId": "update-run-task-file",
        "description": "Update a specific file for a specific task in a specific run",
        "tags": []
      }
    },
    "/teams/{teamname}/runs/{runid}/tasks/{taskname}/webhooks": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "runid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "taskname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webhooks"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "listWebhooks",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "List run task webhooks",
        "description": "Get the webhooks for a specific task from a specific run",
        "operationId": "list-run-task-webhooks",
        "tags": []
      }
    },
    "/teams/{teamname}/runs/{runid}/tasks/{taskname}/complete": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "runid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "taskname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Tasks"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "completeTask",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Complete task",
        "operationId": "complete-run-task",
        "description": "Complete a specific task in a specific run",
        "tags": []
      }
    },
    "/teams/{teamname}/search": {
      "get": {
        "deprecated": true,
        "summary": "Search V1",
        "description": "Execute a search for processes, runs, tasks or tables in a team.\n\nNote: this endpoint is deprecated in favor of the `search/v2` endpoint\n",
        "tags": [
          "Search"
        ],
        "x-visible": true,
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "types",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SearchV1Response"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "x-pushbot-function": "search",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "operationId": "search-v1"
      }
    },
    "/teams/{teamname}/search/v2": {
      "post": {
        "summary": "Search V2",
        "description": "Execute a search for processes, runs, or tasks, tables and other entities within a team.\n",
        "tags": [
          "Search"
        ],
        "x-visible": true,
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "teamname",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "Search V2 Request",
            "schema": {
              "$ref": "#/definitions/SearchV2Request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SearchV2Response"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "operationId": "search-v2"
      }
    },
    "/teams/{teamname}/steps/{stepid}": {
      "get": {
        "x-visible": true,
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "stepid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Steps"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "getStep",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Get tep",
        "operationId": "get-step",
        "description": "Get a specific step",
        "tags": []
      },
      "put": {
        "x-visible": true,
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "stepid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Steps"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "updateStepByID",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Update step",
        "operationId": "update-step",
        "description": "Update a specific stem",
        "tags": []
      },
      "delete": {
        "summary": "Delete step",
        "tags": [
          "Processes",
          "Steps"
        ],
        "x-visible": true,
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "stepid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Steps"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "deleteStep",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "description": "Delete a specific step",
        "operationId": "delete-step"
      }
    },
    "/teams/{teamname}/steps/{stepid}/writable-fields/{fieldname}": {
      "put": {
        "tags": [],
        "summary": "Update writable field",
        "x-visible": true,
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "stepid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fieldname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "description": "Add a field to the list of writable fields on this step. If the field already exists, this has no action",
        "operationId": "update-writable-field"
      },
      "delete": {
        "tags": [],
        "summary": "Delete writable field",
        "x-visible": true,
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "stepid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fieldname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "description": "Delete a field from the list of writable fields on this step. If the field does not exist, this has no action",
        "operationId": "delete-writable-field"
      }
    },
    "/teams/{teamname}/steps/{stepid}/evaluate-outputs": {
      "post": {
        "description": "Given a set of step configuration params, evaluate which output fields will be generated by the step.\n",
        "tags": [
          "Steps",
          "Fields"
        ],
        "x-visible": true,
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "stepid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "evaluateOutputs Request",
            "in": "body",
            "schema": {
              "type": "object",
              "description": "A set of key:value pairs, defining a value for each param's fieldName"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Fields"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "summary": "Evaluate step outputs",
        "operationId": "evaluate-step-outputs"
      }
    },
    "/teams/{teamname}/tasks": {
      "get": {
        "tags": [],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "after",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Tasks"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "listTasks",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "List tasks",
        "operationId": "list-tasks",
        "description": "Get all the tasks for a specific team"
      },
      "post": {
        "tags": [],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Tasks"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "createAdhocTask",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "x-pushbot-ratelimit-allowed-points": 30,
        "x-pushbot-ratelimit-keyprefix": "createAdhocTask",
        "summary": "Create task",
        "operationId": "create-task",
        "description": "Create a task"
      }
    },
    "/teams/{teamname}/tasks/{taskid}": {
      "get": {
        "tags": [
          "support"
        ],
        "x-visible": true,
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "taskid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TaskID"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "getTask",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Get task",
        "operationId": "get-task",
        "description": "Get a specific task"
      },
      "put": {
        "tags": [],
        "x-visible": true,
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "taskid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TaskID"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "updateTaskByID",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Update task",
        "operationId": "update-task",
        "description": "Update a specific task"
      }
    },
    "/teams/{teamname}/tasks/{taskid}/complete": {
      "post": {
        "tags": [],
        "x-visible": true,
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "taskid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Tasks"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "x-pushbot-function": "completeTaskByID",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Complete task",
        "operationId": "complete-task",
        "description": "Complete a specific task"
      }
    },
    "/teams/{teamname}/tasks/{taskid}/open": {
      "post": {
        "summary": "Open task",
        "tags": [
          "Tasks"
        ],
        "x-visible": true,
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "taskid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Tasks"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "description": "Open a task that has not been started yet",
        "operationId": "open-task"
      }
    },
    "/teams/{teamname}/tasks/{taskid}/reopen": {
      "post": {
        "tags": [],
        "x-visible": true,
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "taskid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "optional",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TaskID"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "x-pushbot-function": "reopenTask",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "x-pushbot-ratelimit-allowed-points": 30,
        "x-pushbot-ratelimit-keyprefix": "reopenTask",
        "summary": "Reopen task",
        "operationId": "reopen-task",
        "description": "Reopen a specific task"
      }
    },
    "/teams/{teamname}/tasks/{taskid}/files": {
      "get": {
        "summary": "List task files",
        "tags": [
          "Files",
          "Tasks"
        ],
        "x-visible": true,
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "taskid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Files"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "listFiles",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "description": "Get all the files from a specific task",
        "operationId": "list-task-files"
      },
      "post": {
        "tags": [],
        "consumes": [
          "application/json",
          "multipart/form-data",
          "application/octet-stream",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "taskid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Files"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "createFile",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Create task file",
        "operationId": "create-task-file",
        "description": "Create a file for a specific task"
      }
    },
    "/teams/{teamname}/tasks/{taskid}/files/{fileid}": {
      "put": {
        "tags": [],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "taskid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fileid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Files"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "updateFile",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Update task file",
        "operationId": "update-task-file",
        "description": "Update a specific file for a specific task"
      }
    },
    "/teams/{teamname}/tasks/{taskid}/webhooks": {
      "get": {
        "tags": [],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "taskid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webhooks"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "listWebhooks",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "List task webhooks",
        "operationId": "list-task-webhooks",
        "description": "Get webhooks for a specific task"
      }
    },
    "/teams/{teamname}/tasks/{taskid}/fields": {
      "get": {
        "tags": [],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "taskid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Fields"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "404": {
            "description": "404 response"
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "listFields",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Get task fields",
        "operationId": "get-task-fields",
        "description": "Get fields for a specific task"
      },
      "post": {
        "tags": [],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "taskid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Fields"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "createField",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Create task field",
        "operationId": "create-task-field",
        "description": "Create a field for a specific task"
      }
    },
    "/teams/{teamname}/tasks/{taskid}/fields/{fieldname}": {
      "get": {
        "tags": [],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "taskid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "fieldname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Fields"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "getField",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Get task field",
        "operationId": "get-task-field",
        "description": "Get a specific field for a specific task"
      },
      "put": {
        "tags": [],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "taskid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fieldname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Fields"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "updateField",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Update task field",
        "operationId": "update-task-field",
        "description": "Update a specific field on a specific task"
      },
      "delete": {
        "tags": [],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "taskid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fieldname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Fields"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "deleteField",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Delete task field",
        "operationId": "delete-task-field",
        "description": "Delete a specific field from a specific task"
      }
    },
    "/teams/{teamname}/tables": {
      "get": {
        "tags": [],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Empty"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "listTables",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "List tables",
        "operationId": "list-tables",
        "description": "Get tables for a specific team"
      },
      "post": {
        "tags": [],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Empty"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "createTable",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Create table",
        "operationId": "create-table",
        "description": "Create a table for a specific team"
      }
    },
    "/tables/index-meta-tables": {
      "post": {
        "summary": "Index meta tables",
        "tags": [
          "Admin"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "subtype",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Tables"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "indexMetaTables",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "x-pushbot-ratelimit-allowed-points": 8,
        "x-pushbot-ratelimit-keyprefix": "indexMetaTables",
        "description": "Indexes application type data tables created in a migration",
        "operationId": "index-meta-tables"
      }
    },
    "/teams/{teamname}/tables/import": {
      "post": {
        "tags": [],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Tables"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "importTable",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "x-pushbot-ratelimit-allowed-points": 10,
        "x-pushbot-ratelimit-keyprefix": "importTable",
        "summary": "Import table",
        "operationId": "import-table",
        "description": "Import a table into a specific team"
      }
    },
    "/teams/{teamname}/tables/{tableid}": {
      "get": {
        "tags": [],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Empty"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "getTable",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Get table",
        "operationId": "get-table",
        "description": "Get a specific table"
      },
      "put": {
        "tags": [],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Empty"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "updateTable",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Update table",
        "operationId": "update-table",
        "description": "Update a specific table"
      }
    },
    "/teams/{teamname}/tables/{tableid}/export": {
      "post": {
        "tags": [],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "exportType",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Files"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "exportTable",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Export table",
        "operationId": "export-table",
        "description": "Export a specific table"
      }
    },
    "/teams/{teamname}/tables/{tableid}/columns": {
      "post": {
        "tags": [],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Empty"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "addTableColumn",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Create table column",
        "operationId": "create-table-column",
        "description": "Create a column on a specific table"
      }
    },
    "/teams/{teamname}/tables/{tableid}/columns/{fieldname}": {
      "get": {
        "tags": [],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fieldname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Empty"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "summary": "Get table column",
        "operationId": "get-table-column",
        "description": "Get a specific column from a specific table"
      },
      "put": {
        "tags": [],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fieldname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Empty"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "summary": "Update table column",
        "operationId": "update-table-column",
        "description": "Update a specific column in a specific table"
      },
      "delete": {
        "tags": [],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fieldname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Empty"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "summary": "Delete table column",
        "operationId": "delete-table-column",
        "description": "Delete a specific column in a specific table"
      }
    },
    "/teams/{teamname}/tables/{tableid}/fields/{fieldname}": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fieldname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Empty"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "updateTableField",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Update table field",
        "operationId": "update-table-field",
        "description": "Update a specific field in a specific table",
        "tags": []
      }
    },
    "/teams/{teamname}/tables/{tableid}/append": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Tables"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "appendToTable",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "x-pushbot-ratelimit-allowed-points": 10,
        "x-pushbot-ratelimit-keyprefix": "appendToTable",
        "summary": "Append row to table",
        "operationId": "append-row-to-table",
        "description": "Append a row to a specific table",
        "tags": []
      }
    },
    "/teams/{teamname}/tables/{tableid}/parentprocesses": {
      "get": {
        "tags": [
          "Processes"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Processes"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "listTableParentProcesses",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "List table parent processes",
        "operationId": "list-table-parent-processes",
        "description": "Get the parent processes of a specific table"
      }
    },
    "/teams/{teamname}/tables/{tableid}/replace": {
      "post": {
        "tags": [],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Tables"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "replaceTable",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "x-pushbot-ratelimit-allowed-points": 10,
        "x-pushbot-ratelimit-keyprefix": "replaceTable",
        "summary": "Replace table",
        "operationId": "replace-table",
        "description": "Replace a specific table"
      }
    },
    "/teams/{teamname}/tables/{tableid}/rows": {
      "get": {
        "tags": [],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "select",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "columns",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Empty"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "listTableRows",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "List table rows",
        "operationId": "list-table-rows",
        "description": "Get the rows of a specific table"
      },
      "post": {
        "tags": [],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Empty"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "addRowToTable",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Create table row",
        "operationId": "create-table-row",
        "description": "Create a row on a specific table"
      }
    },
    "/teams/{teamname}/tables/{tableid}/rows/{rowid}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "rowid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Empty"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "summary": "Get table row",
        "operationId": "get-table-row",
        "description": "Get a specific row from a specific table",
        "tags": []
      },
      "delete": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "rowid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Empty"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "summary": "Delete table row",
        "operationId": "delete-table-row",
        "description": "Delete a specific row from a specific table",
        "tags": []
      }
    },
    "/teams/{teamname}/tables/{tableid}/rows/{rowid}/fields": {
      "post": {
        "tags": [],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "rowid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Empty"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "addFieldToTable",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Create table row field",
        "operationId": "create-table-row-field",
        "description": "Create a field on a specific table row"
      }
    },
    "/teams/{teamname}/tables/{tableid}/rows/{rowid}/fields/{fieldname}": {
      "get": {
        "tags": [],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "rowid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fieldname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Empty"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "summary": "Get table row field",
        "operationId": "get-table-row-field",
        "description": "Get a specific field from a specific table row"
      },
      "put": {
        "tags": [],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "rowid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fieldname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Empty"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "updateTableField",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Update table row field",
        "operationId": "update-table-row-field",
        "description": "Update a specific field from a specific table row"
      },
      "delete": {
        "tags": [],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "tableid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "rowid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fieldname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Empty"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "summary": "Delete table row field",
        "operationId": "delete-table-row-field",
        "description": "Delete a specific field from a specific table row"
      }
    },
    "/teams/{teamname}/users/{username}/_test/message/{messageType}": {
      "post": {
        "tags": [
          "Messages"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "messageType",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "201 response",
            "schema": {
              "$ref": "#/definitions/Messages"
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "sendTestMessage",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Send test message",
        "operationId": "send-test-message",
        "description": "Send a test message"
      }
    },
    "/teams/{teamname}/triggers": {
      "get": {
        "tags": [
          "Triggers"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "after",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webhooks"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "listTriggers",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "List triggers",
        "description": "Gets all triggers for a specific team",
        "operationId": "list-triggers"
      }
    },
    "/teams/{teamname}/triggers/health": {
      "get": {
        "tags": [],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Teams"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": ""
              }
            }
          }
        },
        "x-pushbot-function": "getTriggerHealth",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Healthcheck for triggers",
        "operationId": "trigger-healthcheck",
        "description": "Healthcheck for triggers",
        "security": [
          {
            "user_key": []
          }
        ]
      }
    },
    "/teams/{teamname}/upcoming/{upcomingid}": {
      "get": {
        "tags": [
          "Upcoming"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "upcomingid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Upcoming"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "x-pushbot-function": "getUpcoming",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Get upcoming",
        "operationId": "get-upcoming",
        "description": "Get an upcoming for a specific team by upcomingID",
        "security": [
          {
            "user_key": []
          }
        ]
      },
      "put": {
        "tags": [
          "Upcoming"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "upcomingid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Upcoming"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "x-pushbot-function": "updateUpcoming",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "x-pushbot-ratelimit-allowed-points": 30,
        "x-pushbot-ratelimit-keyprefix": "updateUpcoming",
        "summary": "Update upcoming",
        "operationId": "update-upcoming",
        "description": "Update an existing upcoming for a specific team",
        "security": [
          {
            "user_key": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Upcoming"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "upcomingid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "204 response",
            "schema": {
              "$ref": "#/definitions/Upcoming"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "404": {
            "description": "No upcoming exists for the given team name and upcoming id",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "No upcoming exists with id 12341234-1234-1234-1234-123412341234"
                }
              }
            }
          }
        },
        "x-pushbot-function": "deleteUpcoming",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Delete upcoming",
        "operationId": "delete-upcoming",
        "description": "Delete ax existing upcoming for a specific team",
        "security": [
          {
            "user_key": []
          }
        ]
      }
    },
    "/teams/{teamname}/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Users"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "404": {
            "description": "404 response"
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "listUsers",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "List users",
        "operationId": "list-users",
        "description": "Get users for a specific team"
      },
      "post": {
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Users"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "createUser",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Create user",
        "operationId": "create-user",
        "description": "Create User is only meant for bot / integration users. Human users should be added by invitation."
      }
    },
    "/teams/{teamname}/users/{username}": {
      "get": {
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Users"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "getUser",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Get user",
        "operationId": "get-user",
        "description": "Get a specific user"
      },
      "put": {
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Users"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "updateUser",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Update user",
        "operationId": "update-user",
        "description": "Update a specific user"
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Users"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "deleteUser",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Delete user",
        "operationId": "delete-user",
        "description": "Delete a specific user"
      }
    },
    "/teams/{teamname}/users/{username}/auth": {
      "get": {
        "tags": [
          "Authentication",
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Users"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "401 response"
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "authUser",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Authenticate user",
        "operationId": "authenticate-user-get",
        "description": "Authenticate a specific user"
      },
      "post": {
        "tags": [
          "Authentication",
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Users"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "authUser",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "x-pushbot-ratelimit-allowed-points": 100,
        "x-pushbot-ratelimit-keyprefix": "authUser",
        "summary": "Authenticate user",
        "operationId": "authenticate-team-user",
        "description": "Authenticate a specific user"
      }
    },
    "/teams/{teamname}/users/{username}/login-lock": {
      "delete": {
        "tags": [
          "Authentication",
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Users"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "x-pushbot-function": "unlockUser",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Unlock user login",
        "operationId": "unlock-user-login",
        "description": "Unlock a user from logging in"
      }
    },
    "/teams/{teamname}/users/{username}/logout": {
      "post": {
        "tags": [
          "Authentication",
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Empty"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "x-pushbot-function": "logoutUser",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Log out",
        "description": "Logs a user out",
        "operationId": "logout"
      }
    },
    "/teams/{teamname}/users/{username}/files": {
      "get": {
        "tags": [
          "Files"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Files"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "listFiles",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "List user files",
        "operationId": "list-user-files",
        "description": "Get files for a specific user"
      }
    },
    "/teams/{teamname}/users/{username}/groups": {
      "get": {
        "tags": [
          "Groups"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Users"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "listGroups",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "List groups",
        "operationId": "list-user-groups",
        "description": "Get all the groups for a specific user"
      }
    },
    "/teams/{teamname}/users/{username}/integrations": {
      "get": {
        "tags": [
          "Integrations"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Users"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "x-pushbot-function": "listIntegrations",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "List user integrations",
        "operationId": "list-user-integrations",
        "description": "Get all the integrations for a specific user"
      }
    },
    "/teams/{teamname}/users/{username}/notifications": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Notifications"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "listNotifications",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "List user notifications",
        "operationId": "list-user-notifications",
        "description": "Get all notifications for a specific user"
      }
    },
    "/teams/{teamname}/users/{username}/notifications/{notificationid}": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "notificationid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Notifications"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "getNotification",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Get user notification",
        "operationId": "get-user-notification",
        "description": "Get a specific notification for a specific user"
      },
      "put": {
        "tags": [
          "Notifications"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "notificationid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Notifications"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "updateNotification",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "summary": "Update user notification",
        "operationId": "update-user-notification",
        "description": "Update a specific notification for a specific user"
      }
    },
    "/teams/{teamname}/users/{username}/recent-logins": {
      "get": {
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserLogins"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "getRecentUserLogins",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "operationId": "list-recent-logins",
        "summary": "List recent logins",
        "description": "Get the recent logins for a specific user and team"
      }
    },
    "/teams/{teamname}/users/{username}/favorites/processes": {
      "get": {
        "summary": "List favorite processes for a user",
        "tags": [
          "Favorites"
        ],
        "x-visible": true,
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "after",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FavoritesList"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "operationId": "list-favorites",
        "description": "Retrieve a list of favorite processes for a user"
      }
    },
    "/teams/{teamname}/users/{username}/favorites/processes/{processid}": {
      "get": {
        "summary": "Get favorite status of a process for a user",
        "tags": [
          "Favorites"
        ],
        "x-visible": true,
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "processid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Favorites"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "operationId": "get-favorite-status",
        "security": [
          {
            "user_key": []
          }
        ],
        "description": "Retrieve the favorite status of a process for a user"
      },
      "put": {
        "summary": "Update favorite status of a process for a user",
        "tags": [
          "Favorites"
        ],
        "x-visible": true,
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "processid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "favorite",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FavoritesNew"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Favorites"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "operationId": "update-favorite-status",
        "description": "Update the favorite status of a process for a user"
      }
    },
    "/teams/{teamname}/webhooks": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webhooks"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "listWebhooks",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "operationId": "list-webhooks",
        "summary": "List webhooks for a specific team",
        "description": "Gets all webhooks for a specific team"
      },
      "post": {
        "tags": [
          "Webhooks"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webhooks"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "createWebhook",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "operationId": "create-team-webhook",
        "summary": "Create a webhook for a specific team",
        "description": "Creates a webhook for a specific team"
      },
      "parameters": [
        {
          "type": "string",
          "name": "teamname",
          "in": "path",
          "required": true
        }
      ]
    },
    "/teams/{teamname}/webhooks/{webhookid}": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "webhookid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WebhookID"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "getWebhook",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "operationId": "get-team-webhook",
        "summary": "Get webhook",
        "description": "Get a specific webhook"
      },
      "put": {
        "tags": [
          "Webhooks"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "webhookid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WebhookID"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "updateWebhook",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "operationId": "update-webhook",
        "summary": "Updaet webhook",
        "description": "Update a specific webhook"
      },
      "delete": {
        "tags": [
          "Webhooks"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "x-user-key",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "webhookid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "teamname",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WebhookID"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "user_key": []
          }
        ],
        "x-pushbot-function": "deleteWebhook",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "operationId": "delete-webhook",
        "summary": "Delete webhook",
        "description": "Delete a specific webhook"
      }
    },
    "/webhooks/{webhookid}": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "webhookid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "addFields",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WebhookID"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            },
            "examples": {
              "example-1": {}
            }
          }
        },
        "x-pushbot-function": "execWebhook",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "operationId": "get-webhook",
        "summary": "Get webhook",
        "description": "Gets a webhook by its id"
      },
      "post": {
        "tags": [
          "Webhooks"
        ],
        "consumes": [
          "text/xml",
          "application/json",
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "webhookid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WebhookID"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        },
        "x-pushbot-function": "execWebhook",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy"
        },
        "x-pushbot-ratelimit-allowed-points": 120,
        "x-pushbot-ratelimit-keyprefix": "execWebhook",
        "operationId": "create-webhook",
        "summary": "Create webhook",
        "description": "Create a new webhook"
      }
    },
    "/teams/{teamname}/processes/{processID}/metrics": {
      "parameters": [
        {
          "type": "string",
          "name": "teamname",
          "in": "path",
          "required": true,
          "description": "The name of the team to get metrics for"
        },
        {
          "type": "string",
          "name": "processID",
          "in": "path",
          "required": true,
          "description": "The id of the process to get metrics for"
        }
      ],
      "get": {
        "summary": "Get process metrics",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "description": "The metrics for a specific process",
              "properties": {
                "numberOfCompletedRuns": {
                  "type": "integer",
                  "description": "The number of runs completed for this process",
                  "example": "4"
                },
                "numberOfCancelledRuns": {
                  "type": "integer",
                  "description": "The number of cancelled runs for this process",
                  "example": "2"
                },
                "numberOfFixTasks": {
                  "type": "integer",
                  "description": "The number of fix tasks created from these this process",
                  "example": "1"
                },
                "averageRunDuration": {
                  "type": "string",
                  "description": "The average duration for each run from this process. This is in ISO 8601 Duration format.",
                  "example": "P23DT23H"
                }
              }
            },
            "examples": {
              "Example": {
                "numberOfCompletedRuns": 4,
                "numberOfCancelledRuns": 2,
                "numberOfFixTasks": 1,
                "averageRunDuration": "P23DT23H"
              }
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized - Invalid auth header or not authorized to this process",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "An error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - No auth header found",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "An error message"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - No process exists with the processID passed in",
            "schema": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {}
          }
        },
        "operationId": "get-process-metrics",
        "description": "Get process metrics for a specific team/process.\n\nCan be filtered to a specific timeframe with the query params.\n\nThe `start` and `end` query params format is `YYYY-MM-DD`.",
        "security": [
          {
            "user_key": []
          }
        ],
        "parameters": [
          {
            "type": "string",
            "in": "query",
            "name": "start",
            "description": "The start date to get metrics for",
            "pattern": "YYYY-MM-DD"
          },
          {
            "type": "string",
            "in": "query",
            "name": "end",
            "description": "The end date to get metrics for",
            "pattern": "YYYY-MM-DD"
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "user_key": {
      "description": "User key authentication into a specific team\n",
      "type": "apiKey",
      "name": "x-user-key",
      "in": "header"
    },
    "admin_team_user_key": {
      "description": "User key authentication into the admin team and admin-only endpoints\n",
      "type": "apiKey",
      "name": "x-user-key",
      "in": "header"
    },
    "worker_key": {
      "description": "Action Worker basic authentication to the Action Worker Execution\nendpoints using `workerID` and `secretKey`\n",
      "type": "basic"
    }
  },
  "definitions": {
    "Empty": {
      "type": "object"
    },
    "AccessRequest": {
      "$ref": "schema/access-request/access-request.yaml"
    },
    "Apps": {
      "$ref": "schema/app/app.yaml"
    },
    "CustomIntegrationDefinition": {
      "$ref": "schema/integration/custom-integration-definition.yaml"
    },
    "Env": {
      "type": "object"
    },
    "Features": {
      "$ref": "schema/features/features.yaml"
    },
    "Teams": {
      "$ref": "schema/team/team.yaml"
    },
    "Webhooks": {
      "$ref": "schema/webhook/webhook.yaml"
    },
    "Invites": {
      "$ref": "schema/invite/invite.yaml"
    },
    "InvitesNew": {
      "$ref": "schema/invite/invite-new.yaml"
    },
    "Processes": {
      "$ref": "schema/process/process.yaml"
    },
    "Files": {
      "$ref": "schema/file/file.yaml"
    },
    "Runs": {
      "$ref": "schema/run/run.yaml"
    },
    "Steps": {
      "$ref": "schema/step/step.yaml"
    },
    "Comments": {
      "$ref": "schema/comment/comment.yaml"
    },
    "ProcessRights": {
      "$ref": "schema/process/rights.yaml"
    },
    "Tasks": {
      "$ref": "schema/task/task.yaml"
    },
    "TaskID": {
      "$ref": "schema/taskID/taskID.yaml"
    },
    "Messages": {
      "$ref": "schema/message/message.yaml"
    },
    "Notifications": {
      "$ref": "schema/notification/notification.yaml"
    },
    "Favorites": {
      "$ref": "schema/favorite/favorite.yaml"
    },
    "FavoritesNew": {
      "$ref": "schema/favorite/favorite-new.yaml"
    },
    "FavoritesList": {
      "$ref": "schema/favorite/favorite-list.yaml"
    },
    "Fields": {
      "$ref": "schema/field/field.yaml"
    },
    "WebhookID": {
      "$ref": "schema/webhookID/webhookID.yaml"
    },
    "SAML-auth": {
      "$ref": "schema/saml-auth/saml-auth.yaml"
    },
    "SAML-serviceProviderMetadata": {
      "$ref": "schema/saml-serviceProviderMetadata/saml-serviceProviderMetadata.yaml"
    },
    "SearchV1Response": {
      "$ref": "schema/search/search-v1-response.yaml"
    },
    "SearchV2Request": {
      "$ref": "schema/search/search-v2-request.yaml",
      "x-examples": {
        "example-1": {
          "types": [
            "string"
          ],
          "filter": {
            "processes": {
              "processID": [],
              "category": [],
              "owner": [],
              "participatingUsers": [
                "string"
              ],
              "createdDate": {
                "gt": "2019-08-24T14:15:22Z",
                "lt": "2019-08-24T14:15:22Z",
                "gte": "2019-08-24T14:15:22Z",
                "lte": "2019-08-24T14:15:22Z"
              },
              "isEditable": true,
              "isArchived": [
                null
              ]
            },
            "runs": {
              "processID": [],
              "runID": [],
              "status": [],
              "startDate": {
                "gt": "2019-08-24T14:15:22Z",
                "lt": "2019-08-24T14:15:22Z",
                "gte": "2019-08-24T14:15:22Z",
                "lte": "2019-08-24T14:15:22Z"
              },
              "owner": [],
              "participatingUsers": [
                "string"
              ],
              "createdDate": {
                "gt": "2019-08-24T14:15:22Z",
                "lt": "2019-08-24T14:15:22Z",
                "gte": "2019-08-24T14:15:22Z",
                "lte": "2019-08-24T14:15:22Z"
              },
              "updatedDate": {
                "gt": "2019-08-24T14:15:22Z",
                "lt": "2019-08-24T14:15:22Z",
                "gte": "2019-08-24T14:15:22Z",
                "lte": "2019-08-24T14:15:22Z"
              },
              "deadline": {
                "gt": "2019-08-24T14:15:22Z",
                "lt": "2019-08-24T14:15:22Z",
                "gte": "2019-08-24T14:15:22Z",
                "lte": "2019-08-24T14:15:22Z"
              }
            },
            "tasks": {
              "processID": [],
              "runID": [],
              "status": [],
              "startDate": {
                "gt": "2019-08-24T14:15:22Z",
                "lt": "2019-08-24T14:15:22Z",
                "gte": "2019-08-24T14:15:22Z",
                "lte": "2019-08-24T14:15:22Z"
              },
              "assignedTo": "string",
              "taskNumber": {
                "gt": 0,
                "lt": 0,
                "gte": 0,
                "lte": 0
              },
              "createdDate": {
                "gt": "2019-08-24T14:15:22Z",
                "lt": "2019-08-24T14:15:22Z",
                "gte": "2019-08-24T14:15:22Z",
                "lte": "2019-08-24T14:15:22Z"
              },
              "updatedDate": {
                "gt": "2019-08-24T14:15:22Z",
                "lt": "2019-08-24T14:15:22Z",
                "gte": "2019-08-24T14:15:22Z",
                "lte": "2019-08-24T14:15:22Z"
              },
              "deadline": {
                "gt": "2019-08-24T14:15:22Z",
                "lt": "2019-08-24T14:15:22Z",
                "gte": "2019-08-24T14:15:22Z",
                "lte": "2019-08-24T14:15:22Z"
              },
              "participatingUsers": [
                "string"
              ]
            },
            "tables": {
              "tableID": [],
              "tableType": [],
              "isArchived": [
                null
              ],
              "createdDate": {
                "gt": "2019-08-24T14:15:22Z",
                "lt": "2019-08-24T14:15:22Z",
                "gte": "2019-08-24T14:15:22Z",
                "lte": "2019-08-24T14:15:22Z"
              }
            },
            "users": {
              "userID": [],
              "isTeamAdmin": true,
              "isIntegration": [
                null
              ],
              "isArchived": [
                null
              ],
              "isRuntime": [
                null
              ],
              "isGroup": true,
              "isDeactivated": true,
              "createdDate": {
                "gt": "2019-08-24T14:15:22Z",
                "lt": "2019-08-24T14:15:22Z",
                "gte": "2019-08-24T14:15:22Z",
                "lte": "2019-08-24T14:15:22Z"
              }
            },
            "help": {
              "title": [],
              "helpLabels": [],
              "article": [],
              "createdDate": {
                "gt": "2019-08-24T14:15:22Z",
                "lt": "2019-08-24T14:15:22Z",
                "gte": "2019-08-24T14:15:22Z",
                "lte": "2019-08-24T14:15:22Z"
              },
              "startDate": {
                "gt": "2019-08-24T14:15:22Z",
                "lt": "2019-08-24T14:15:22Z",
                "gte": "2019-08-24T14:15:22Z",
                "lte": "2019-08-24T14:15:22Z"
              },
              "endDate": {
                "gt": "2019-08-24T14:15:22Z",
                "lt": "2019-08-24T14:15:22Z",
                "gte": "2019-08-24T14:15:22Z",
                "lte": "2019-08-24T14:15:22Z"
              }
            },
            "actions": {
              "appID": [],
              "appName": [],
              "action": [],
              "version": {
                "gt": "2019-08-24T14:15:22Z",
                "lt": "2019-08-24T14:15:22Z",
                "gte": "2019-08-24T14:15:22Z",
                "lte": "2019-08-24T14:15:22Z"
              },
              "baseAppID": {
                "gt": "2019-08-24T14:15:22Z",
                "lt": "2019-08-24T14:15:22Z",
                "gte": "2019-08-24T14:15:22Z",
                "lte": "2019-08-24T14:15:22Z"
              }
            },
            "webhooks": {
              "webhookID": []
            },
            "upcomings": {
              "upcomingID": []
            }
          },
          "query": {
            "text": "string",
            "prefixSearch": true,
            "properties": {
              "processes": [
                "displayName"
              ],
              "runs": [
                "displayName"
              ],
              "tasks": [
                "displayName"
              ],
              "tables": [
                "displayName"
              ],
              "users": [
                "username"
              ],
              "notifications": [
                "text"
              ],
              "help": [
                "title"
              ],
              "actions": [
                "displayName"
              ],
              "webhooks": [
                "displayName"
              ],
              "upcomings": [
                "displayName"
              ]
            },
            "boost": [
              {
                "filter": {
                  "processes": {
                    "processID": [],
                    "category": [],
                    "owner": [],
                    "participatingUsers": [
                      "string"
                    ],
                    "createdDate": {
                      "gt": "2019-08-24T14:15:22Z",
                      "lt": "2019-08-24T14:15:22Z",
                      "gte": "2019-08-24T14:15:22Z",
                      "lte": "2019-08-24T14:15:22Z"
                    },
                    "isEditable": true,
                    "isArchived": [
                      null
                    ]
                  },
                  "runs": {
                    "processID": [],
                    "runID": [],
                    "status": [],
                    "startDate": {
                      "gt": "2019-08-24T14:15:22Z",
                      "lt": "2019-08-24T14:15:22Z",
                      "gte": "2019-08-24T14:15:22Z",
                      "lte": "2019-08-24T14:15:22Z"
                    },
                    "owner": [],
                    "participatingUsers": [
                      "string"
                    ],
                    "createdDate": {
                      "gt": "2019-08-24T14:15:22Z",
                      "lt": "2019-08-24T14:15:22Z",
                      "gte": "2019-08-24T14:15:22Z",
                      "lte": "2019-08-24T14:15:22Z"
                    },
                    "updatedDate": {
                      "gt": "2019-08-24T14:15:22Z",
                      "lt": "2019-08-24T14:15:22Z",
                      "gte": "2019-08-24T14:15:22Z",
                      "lte": "2019-08-24T14:15:22Z"
                    },
                    "deadline": {
                      "gt": "2019-08-24T14:15:22Z",
                      "lt": "2019-08-24T14:15:22Z",
                      "gte": "2019-08-24T14:15:22Z",
                      "lte": "2019-08-24T14:15:22Z"
                    }
                  },
                  "tasks": {
                    "processID": [],
                    "runID": [],
                    "status": [],
                    "startDate": {
                      "gt": "2019-08-24T14:15:22Z",
                      "lt": "2019-08-24T14:15:22Z",
                      "gte": "2019-08-24T14:15:22Z",
                      "lte": "2019-08-24T14:15:22Z"
                    },
                    "assignedTo": "string",
                    "taskNumber": {
                      "gt": 0,
                      "lt": 0,
                      "gte": 0,
                      "lte": 0
                    },
                    "createdDate": {
                      "gt": "2019-08-24T14:15:22Z",
                      "lt": "2019-08-24T14:15:22Z",
                      "gte": "2019-08-24T14:15:22Z",
                      "lte": "2019-08-24T14:15:22Z"
                    },
                    "updatedDate": {
                      "gt": "2019-08-24T14:15:22Z",
                      "lt": "2019-08-24T14:15:22Z",
                      "gte": "2019-08-24T14:15:22Z",
                      "lte": "2019-08-24T14:15:22Z"
                    },
                    "deadline": {
                      "gt": "2019-08-24T14:15:22Z",
                      "lt": "2019-08-24T14:15:22Z",
                      "gte": "2019-08-24T14:15:22Z",
                      "lte": "2019-08-24T14:15:22Z"
                    },
                    "participatingUsers": [
                      "string"
                    ]
                  },
                  "tables": {
                    "tableID": [],
                    "tableType": [],
                    "isArchived": [
                      null
                    ],
                    "createdDate": {
                      "gt": "2019-08-24T14:15:22Z",
                      "lt": "2019-08-24T14:15:22Z",
                      "gte": "2019-08-24T14:15:22Z",
                      "lte": "2019-08-24T14:15:22Z"
                    }
                  },
                  "users": {
                    "userID": [],
                    "isTeamAdmin": true,
                    "isIntegration": [
                      null
                    ],
                    "isArchived": [
                      null
                    ],
                    "isRuntime": [
                      null
                    ],
                    "isGroup": true,
                    "isDeactivated": true,
                    "createdDate": {
                      "gt": "2019-08-24T14:15:22Z",
                      "lt": "2019-08-24T14:15:22Z",
                      "gte": "2019-08-24T14:15:22Z",
                      "lte": "2019-08-24T14:15:22Z"
                    }
                  },
                  "help": {
                    "title": [],
                    "helpLabels": [],
                    "article": [],
                    "createdDate": {
                      "gt": "2019-08-24T14:15:22Z",
                      "lt": "2019-08-24T14:15:22Z",
                      "gte": "2019-08-24T14:15:22Z",
                      "lte": "2019-08-24T14:15:22Z"
                    },
                    "startDate": {
                      "gt": "2019-08-24T14:15:22Z",
                      "lt": "2019-08-24T14:15:22Z",
                      "gte": "2019-08-24T14:15:22Z",
                      "lte": "2019-08-24T14:15:22Z"
                    },
                    "endDate": {
                      "gt": "2019-08-24T14:15:22Z",
                      "lt": "2019-08-24T14:15:22Z",
                      "gte": "2019-08-24T14:15:22Z",
                      "lte": "2019-08-24T14:15:22Z"
                    }
                  },
                  "actions": {
                    "appID": [],
                    "appName": [],
                    "action": [],
                    "version": {
                      "gt": "2019-08-24T14:15:22Z",
                      "lt": "2019-08-24T14:15:22Z",
                      "gte": "2019-08-24T14:15:22Z",
                      "lte": "2019-08-24T14:15:22Z"
                    },
                    "baseAppID": {
                      "gt": "2019-08-24T14:15:22Z",
                      "lt": "2019-08-24T14:15:22Z",
                      "gte": "2019-08-24T14:15:22Z",
                      "lte": "2019-08-24T14:15:22Z"
                    }
                  },
                  "webhooks": {
                    "webhookID": []
                  },
                  "upcomings": {
                    "upcomingID": []
                  }
                },
                "types": [
                  "string"
                ],
                "boost": -1.7976931348623157e+308
              }
            ]
          },
          "after": "string",
          "limit": 0,
          "sort": "displayName"
        }
      }
    },
    "SearchV2Response": {
      "$ref": "schema/search/search-v2-response.yaml"
    },
    "SMS": {
      "$ref": "schema/sms/sms.yaml"
    },
    "Tables": {
      "$ref": "schema/table/table.yaml"
    },
    "Upcoming": {
      "$ref": "schema/upcoming/upcoming.yaml"
    },
    "Users": {
      "$ref": "schema/user/user.yaml"
    },
    "UserLogins": {
      "$ref": "schema/userLogin/userLogin.yaml"
    },
    "Data-Key": {
      "$ref": "schema/data-key/data-key.yaml"
    },
    "Predictors": {
      "$ref": "schema/predictor/predictor.yaml"
    },
    "Community-SSO": {
      "$ref": "schema/community-sso/community-sso.yaml"
    },
    "Community-Auth": {
      "$ref": "schema/community-auth/community-auth.yaml"
    },
    "Process-Exports": {
      "$ref": "schema/process-export/process-export.yaml"
    },
    "Process-Imports": {
      "$ref": "schema/process-import/process-import.yaml"
    },
    "UpdateMask": {
      "$ref": "schema/update-mask/update-mask.yaml"
    },
    "Action": {
      "$ref": "schema/action/action.yaml"
    },
    "Worker": {
      "$ref": "schema/worker/worker.yaml"
    },
    "WorkerControl": {
      "$ref": "schema/worker-control/worker-control.yaml"
    },
    "PendingWorkerTask": {
      "$ref": "schema/pending-worker-task/pending-worker-task.yaml"
    },
    "UserToken": {
      "$ref": "schema/user-token/user-token.yaml"
    },
    "ImportAction": {
      "$ref": "schema/actions/imported-action.yaml"
    }
  },
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ]
}